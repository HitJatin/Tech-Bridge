{"version":3,"sources":["components/header/header.js","components/main/zone/zone.js","components/main/main.js","components/zone-content/zone-section/zone-section-content/zone-section-content.js","components/zone-content/zone-section/sections-nav/sections-nav.js","components/zone-content/zone-section/zone-section.js","components/zone-content/zone-content.js","components/signup/signup.js","components/login/login.js","components/start-page/start-page.js","components/home/home.js","components/facilitator/facilitator.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","navMenuOpen","navigate","logoutModal","toggle","bind","logout","closeModal","this","setState","logoutData","JSON","stringify","email","myHeaders","Headers","append","requestOptions","method","headers","body","redirect","fetch","logoutApi","then","response","text","catch","error","console","userToggle","userName","push","isOpen","caret","onClick","id","color","href","process","dark","fixed","Component","Zone","button","zoneData","status","profile","roadmap","pathName","disabled","to","name","className","desc","Main","viewZoneIndex","zoneAnimating","path","isLoaded","pathProgress","setViewZoneIndex","setZoneAnimating","previousButton","nextButton","roadmaps","lessonProgress","find","profileCode","roadmapProgress","paths","code","progress","zoneIndex","length","res","json","result","index","animating","previousZoneIndex","zones","nextZoneIndex","message","zonesJson","zonesHtml","i","resumeZone","onExited","onExiting","activeIndex","next","previous","interval","items","onClickHandler","newIndex","direction","directionText","dangerouslySetInnerHTML","__html","introduction","content","controls","src","video","type","MainRoute","params","useParams","ZoneSectionContent","exerciseInput","improveAnswer","submitExercise","setExerciseView","prevProps","sectionProgress","exerciseIndex","n","exercises","log","trim","alert","sectionData","completeVideoButtton","exerciseData","completeVideo","width","placeholder","value","toggleHelpWindow","onChange","e","target","SectionNav","exercise","menuItems","MenuItem","totalExercises","Button","variant","Select","activeExercise","changeExercise","disableUnderline","ExerciseButton","ZoneSection","startTime","Math","round","Date","getTime","help","contactFacilitator","activeHelpTab","helpTabsClasses","solutions","helpWindowActiveProblem","askedProblem","problemDesc","facilitatorRoom","toggleContactFacilitator","changeHelpActiveTab","openVideo","openExercise","changeHelpWindowActiveProblem","sendProblem","submitProblem","getCurrentContent","getExerciseSolutions","helpApis","sectionsLocation","sectionIndex","zoneName","getSolutions","openId","tabNo","problemIndex","dataToSend","room","exerciseNav","exercisesIndex","toggleIndex","activeClass","tempExercise","hintsUI","hintNav","hints","solutionsListUI","targetId","problem","accordionId","solution","askProblemUI","currentExercise","isExerciseComplete","isActiveSection","nextExercise","tabs","activeTab","tabId","open","ZoneContent","fetchSectionsJson","a","fetchResponse","data","sectionsJson","activeSectionIndex","sectionsLocationIndex","checkAndAddNewUserProgress","sections","getRoomNo","currProfile","newProfile","profileIndex","findIndex","currRoadmap","newRoadmap","roadmapIndex","currPath","newPath","pathIndex","currZone","newZone","newZoneJson","j","zone","zoneProgress","roomManagementApis","roomsName","cardToggleNo","updateLessonProgress","updateLessonProgressOnExerciseAndUpdateRoomIfRequired","endTime","exerciseUpdate","lessonProgressDetails","mainApis","updateLesson","parse","sectionsHtml","sectionPos","toggleValue","roomInfo","ZoneRoute","SignUp","emails","signUpAccount","signUpApis","getEmails","event","preventDefault","checkEmptyValues","password","confirmPassword","newUserData","sendSignUpToServerAndReportToUser","createUser","statusCode","onSubmit","innerRef","input","NavigateToHome","nav","role","useNavigate","Login","login","loginApis","loginUser","authorized","getLessonProgressEmailAndUserName","StepTile","alt","imgSrc","top","tag","title","FeatureTile","img","float","infoClass","StartPage","steps","placement","features","map","step","feature","class","Profile","profileProgress","segmentsGroup","rightArrow","file","inConstruction","Home","profiles","roadmapsHtml","lesson","AntSwitch","styled","Switch","theme","height","padding","display","transform","opacity","backgroundColor","palette","mode","boxShadow","borderRadius","transition","transitions","create","duration","boxSizing","Facilitator","problemsList","solutionsList","solvedProblemsList","activeProblem","exerciseDesc","documentSolutions","updateActiveProblem","toggleMode","facilitatorApis","getProblemList","filter","exerciseLocation","roadmapName","pathCode","problemListUI","active","checked","App","baseFile","apis","exact","element","signUp","facilitator","main","roomManagement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e5d06de.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Navbar, NavbarBrand, NavbarText, Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navMenuOpen: false,\r\n            navigate: false,\r\n            logoutModal: false\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n    toggle() {\r\n        this.setState({\r\n            navMenuOpen: !this.state.navMenuOpen\r\n        });\r\n    }\r\n    logout() {\r\n        let logoutData = JSON.stringify({\r\n            \"email\": this.props.email\r\n        });\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: logoutData,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(this.props.logoutApi, requestOptions)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n                this.props.logout();\r\n                this.setState({\r\n                    logoutModal: true\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            });\r\n    }\r\n    closeModal() {\r\n        this.setState({\r\n            logoutModal: false\r\n        })\r\n    }\r\n    render() {\r\n        let userToggle = [];\r\n        if (this.props.userName) {\r\n            userToggle.push(\r\n                <NavbarText>\r\n                    <Dropdown toggle={this.toggle} isOpen={this.state.navMenuOpen}>\r\n                        <DropdownToggle caret>\r\n                            {this.props.userName}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            <DropdownItem onClick={this.logout}>Logout</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </NavbarText>\r\n            )\r\n        }\r\n        return (\r\n            <div id=\"navbar\">\r\n                <Modal\r\n                    isOpen={this.state.logoutModal}\r\n                >\r\n                    <ModalHeader>Successfully Logged Out</ModalHeader>\r\n                    <ModalBody>\r\n                        You can go to start page to login again\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" href={process.env.PUBLIC_URL} onClick={this.closeModal}>Start Page</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Navbar\r\n                    color=\"dark\"\r\n                    dark\r\n                    fixed=\"top\"\r\n                >\r\n                    <NavbarBrand href={process.env.PUBLIC_URL}>\r\n                        Tech-Bridge\r\n                    </NavbarBrand>\r\n                    {userToggle}\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Zone extends Component {\r\n    render() {\r\n        const { zoneData, status, profile, roadmap, pathName } = this.props;\r\n        let button;\r\n        if (status === \"locked\")\r\n            button = <Button color=\"danger\" disabled>Locked</Button>;\r\n        if (status === \"completed\")\r\n            button = <Link to={`/${profile}/${roadmap}/${pathName}/${zoneData.name}`}><Button color=\"success\">Completed</Button></Link>;\r\n        if (status === \"start\")\r\n            button = <Link to={`/${profile}/${roadmap}/${pathName}/${zoneData.name}`}><Button color=\"primary\">Start</Button></Link>;\r\n        if (status === \"inprogress\")\r\n            button = <Link to={`/${profile}/${roadmap}/${pathName}/${zoneData.name}`}><Button color=\"warning\">Resume</Button></Link>;\r\n        return (<div>\r\n            <div className=\"zoneHead\">\r\n                <div className=\"emptySpace\"></div>\r\n                <div className=\"zoneTitle\">{zoneData.name}</div>\r\n                <div className=\"zoneButton\">{button}</div>\r\n            </div>\r\n            <div className=\"zoneContent\">{zoneData.desc}</div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Zone;","import React, { Component } from \"react\";\r\nimport \"./main.css\";\r\nimport { Carousel, CarouselControl, CarouselIndicators, CarouselItem } from \"reactstrap\";\r\nimport Zone from \"./zone/zone\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst MainRoute = (props) => {\r\n    const params = useParams();\r\n    const profile = params.profile, roadmap = params.roadmap, pathName = params.pathName;\r\n\r\n    return (<Main lessonProgress={props.lessonProgress} profile={profile} roadmap={roadmap} pathName={pathName} />);\r\n}\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewZoneIndex: 0,\r\n            zoneAnimating: false,\r\n            path: [],\r\n            isLoaded: false,\r\n            error: false,\r\n            pathProgress: []\r\n        }\r\n        this.setViewZoneIndex = this.setViewZoneIndex.bind(this);\r\n        this.setZoneAnimating = this.setZoneAnimating.bind(this);\r\n        this.previousButton = this.previousButton.bind(this);\r\n        this.nextButton = this.nextButton.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const roadmaps = this.props.lessonProgress.find(profile => profile.profileCode === this.props.profile)?.roadmaps;\r\n        const roadmapProgress = roadmaps?.find(roadmap => roadmap.name === this.props.roadmap)?.paths;\r\n        const pathProgress = roadmapProgress?.find(path => path.code === this.props.pathName)?.progress;\r\n        if (pathProgress) {\r\n            let zoneIndex = pathProgress.length;\r\n            if (!pathProgress[zoneIndex - 1].status)\r\n                zoneIndex--;\r\n            this.setState({\r\n                viewZoneIndex: zoneIndex,\r\n                pathProgress: pathProgress\r\n            })\r\n        }\r\n        fetch(`${process.env.PUBLIC_URL}/data/profiles/${this.props.profile}/${this.props.roadmap}/${this.props.pathName}.json`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        path: result,\r\n                        isLoaded: true\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    setViewZoneIndex(index) {\r\n        this.setState({\r\n            viewZoneIndex: index\r\n        })\r\n    }\r\n\r\n    setZoneAnimating(animating) {\r\n        this.setState({\r\n            zoneAnimating: animating\r\n        })\r\n    }\r\n\r\n    previousButton() {\r\n        if (this.state.zoneAnimating) return;\r\n        const previousZoneIndex = this.state.viewZoneIndex === 0 ? this.state.path.zones.length - 1 : this.state.viewZoneIndex - 1;\r\n        this.setViewZoneIndex(previousZoneIndex);\r\n    }\r\n\r\n    nextButton() {\r\n        if (this.state.zoneAnimating) return;\r\n        const nextZoneIndex = this.state.viewZoneIndex === this.state.path.zones.length - 1 ? 0 : this.state.viewZoneIndex + 1;\r\n        this.setViewZoneIndex(nextZoneIndex);\r\n    }\r\n\r\n    render() {\r\n        const { profile, roadmap, pathName } = this.props;\r\n        const { error, isLoaded, viewZoneIndex, zoneAnimating, path, pathProgress } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            let zonesJson = path.zones, zonesHtml = [];\r\n            for (let i = 0; i < zonesJson.length; i++) {\r\n                let status, resumeZone=false;\r\n                if(pathProgress.length!==0){\r\n                    if(!pathProgress[pathProgress.length-1].status)\r\n                    resumeZone=true;\r\n                }\r\n                if(i<pathProgress.length-1 || (i<pathProgress.length && !resumeZone))\r\n                status=\"completed\";\r\n                else if(i<pathProgress.length && resumeZone)\r\n                status=\"inprogress\";\r\n                else if(i===pathProgress.length && !resumeZone)\r\n                status=\"start\";\r\n                else\r\n                status=\"locked\";\r\n                zonesHtml.push(<CarouselItem\r\n                    className=\"zone\"\r\n                    onExited={() => this.setZoneAnimating(false)}\r\n                    onExiting={() => this.setZoneAnimating(true)}\r\n                >\r\n                    <Zone profile={profile} roadmap={roadmap} pathName={pathName} zoneData={zonesJson[i]} status={status} />\r\n                </CarouselItem>)\r\n            }\r\n            return (<div id=\"home\">\r\n                <div className=\"zones\">\r\n                    <Carousel\r\n                        activeIndex={viewZoneIndex}\r\n                        next={this.nextButton}\r\n                        previous={this.previousButton}\r\n                        interval={false}\r\n                    >\r\n                        <CarouselIndicators\r\n                            activeIndex={viewZoneIndex}\r\n                            items={zonesJson}\r\n                            onClickHandler={(newIndex) => {\r\n                                if (zoneAnimating) return;\r\n                                this.setViewZoneIndex(newIndex);\r\n                            }}\r\n                        />\r\n                        {zonesHtml}\r\n                        <CarouselControl\r\n                            direction=\"prev\"\r\n                            directionText=\"Previous\"\r\n                            onClickHandler={this.previousButton}\r\n                        />\r\n                        <CarouselControl\r\n                            direction=\"next\"\r\n                            directionText=\"Next\"\r\n                            onClickHandler={this.nextButton}\r\n                        />\r\n                    </Carousel>\r\n                </div>\r\n                <div id=\"segmentInfo\">\r\n                    <div id=\"infoText\" dangerouslySetInnerHTML={{ __html: path.introduction.content }}></div>\r\n                    <video id=\"infoVideo\" controls>\r\n                        <source src={path.introduction.video} type=\"video/mp4\" />\r\n                        Your browser doesn't support HTML video\r\n                    </video>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default MainRoute;","import { Component } from \"react\";\r\nimport { Button, Input } from \"reactstrap\";\r\n\r\nexport default class ZoneSectionContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            exerciseInput: \"\",\r\n            improveAnswer: false\r\n        }\r\n        this.submitExercise = this.submitExercise.bind(this);\r\n        this.improveAnswer = this.improveAnswer.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.setExerciseView();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            this.setExerciseView();\r\n        }\r\n    }\r\n\r\n    setExerciseView() {\r\n        const { sectionProgress, type, exerciseIndex } = this.props;\r\n        let n = sectionProgress.exercises[exerciseIndex - 1]?.response.length;\r\n        if (type === \"exercise\" && n !== 0) {\r\n            console.log(sectionProgress.exercises, exerciseIndex, n)\r\n            this.setState({\r\n                exerciseInput: sectionProgress.exercises[exerciseIndex - 1]?.response[n - 1],\r\n                improveAnswer: true\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                exerciseInput: '',\r\n                improveAnswer: false\r\n            })\r\n        }\r\n    }\r\n\r\n    submitExercise() {\r\n        const { exerciseInput } = this.state;\r\n        if (exerciseInput.trim() === \"\")\r\n            alert(\"Enter exercise response\");\r\n        else\r\n            this.props.submitExercise(exerciseInput);\r\n    }\r\n\r\n    improveAnswer() {\r\n        this.setState({\r\n            improveAnswer: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { type, sectionProgress, sectionData, exerciseIndex } = this.props;\r\n        const { improveAnswer } = this.state;\r\n        const completeVideoButtton = [], exerciseData = sectionData.exercises;\r\n        if (!sectionProgress.video)\r\n            completeVideoButtton.push(<Button color=\"primary\" onClick={this.props.completeVideo}>Mark Video as complete</Button>)\r\n        if (type === \"video\")\r\n            return (<div className=\"videoView\">\r\n                <video width=\"600\" controls>\r\n                    <source src={sectionData.video} type=\"video/mp4\" />\r\n                    Your browser doesn't support HTML video\r\n                </video>\r\n                <div>{completeVideoButtton}</div>\r\n            </div>)\r\n        else if (type === \"exercise\") {\r\n            if (improveAnswer)\r\n                return (<div className=\"exerciseContent\">\r\n                    <div className=\"exerciseDesc\" dangerouslySetInnerHTML={{ __html: exerciseData[exerciseIndex - 1]?.desc }}></div>\r\n                    <div className=\"exerciseResp\">\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            placeholder=\"Enter your response\"\r\n                            value={this.state.exerciseInput}\r\n                            disabled\r\n                        />\r\n                        <Button className=\"exerciseButtons\" color=\"primary\" onClick={this.improveAnswer} >Improve Answer</Button>\r\n                        <Button className=\"exerciseButtons\" color=\"primary\" onClick={this.props.toggleHelpWindow}>Ask for help</Button>\r\n                    </div>\r\n                </div>)\r\n            else\r\n                return (<div className=\"exerciseContent\">\r\n                    <div className=\"exerciseDesc\" dangerouslySetInnerHTML={{ __html: exerciseData[exerciseIndex - 1]?.desc }}></div>\r\n                    <div className=\"exerciseResp\">\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            placeholder=\"Enter your response\"\r\n                            value={this.state.exerciseInput}\r\n                            onChange={(e) => {\r\n                                this.setState({\r\n                                    exerciseInput: e.target.value\r\n                                });\r\n                            }}\r\n                        />\r\n                        <Button className=\"exerciseButtons\" color=\"primary\" onClick={this.submitExercise} >Submit</Button>\r\n                        <Button className=\"exerciseButtons\" color=\"primary\" onClick={this.props.toggleHelpWindow}>Ask for help</Button>\r\n                    </div>\r\n                </div>)\r\n        }\r\n        else\r\n            return (<div></div >)\r\n    }\r\n}","import { Component } from \"react\";\r\nimport \"./sections-nav.css\"\r\nimport AutoStoriesIcon from '@mui/icons-material/AutoStories';\r\nimport Button from '@mui/material/Button';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nexport default class SectionNav extends Component {\r\n    changeExercise(exercise) {\r\n        console.log(exercise);\r\n    }\r\n    render() {\r\n        let menuItems=[];\r\n        menuItems.push(<MenuItem value={0}>0</MenuItem> )\r\n        for(let i=0;i<this.props.totalExercises;i++){\r\n            menuItems.push(<MenuItem value={i+1}>{i+1}</MenuItem>)\r\n        }\r\n        return (<div className=\"sectionsNav\">\r\n            <Button className=\"viewLesson\" variant=\"contained\">Lesson <AutoStoriesIcon className=\"iconCsss\" /></Button>\r\n            <div className=\"emptySpace\"></div>\r\n            <div className=\"exerciseInfo\">\r\n                <div className=\"exerciseInfo1st\">Exercise</div>\r\n                <Select\r\n                    className=\"exerciseInfo2nd\"\r\n                    value={this.props.activeExercise}\r\n                    onChange={this.changeExercise}\r\n                    variant=\"standard\"\r\n                    disableUnderline\r\n                >\r\n                    {menuItems}\r\n                </Select>\r\n                <div className=\"exerciseInfo3rd\">of {this.props.totalExercises}</div>\r\n            </div>\r\n            <Button className=\"viewCurrentExercise\" variant=\"contained\">Current Exercise</Button>\r\n        </div>)\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport { Accordion, AccordionBody, AccordionHeader, AccordionItem, Button, Card, CardBody, CardHeader, CardText, CardTitle, Col, Collapse, Container, Input, InputGroup, Modal, ModalBody, ModalHeader, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\r\nimport { BsPlayCircle } from \"react-icons/bs\";\r\n\r\nimport ZoneSectionContent from \"./zone-section-content/zone-section-content\";\r\nimport SectionNav from \"./sections-nav/sections-nav\";\r\n\r\nclass VideoButton extends Component {\r\n    render() {\r\n        if (this.props.status)\r\n            return (<Button color=\"success\" onClick={this.props.onClick}>Lesson<BsPlayCircle id=\"videoIcon\" /></Button>);\r\n        else\r\n            return (<Button color=\"primary\" onClick={this.props.onClick}>Lesson<BsPlayCircle id=\"videoIcon\" /></Button>)\r\n    }\r\n}\r\n\r\nclass ExerciseButton extends Component {\r\n    render() {\r\n        if (this.props.status === \"completed\")\r\n            return (<Button color=\"success\" onClick={this.props.onClick}>{this.props.name}</Button>);\r\n        else if (this.props.status === \"start\")\r\n            return (<Button color=\"primary\" onClick={this.props.onClick}>{this.props.name}</Button>);\r\n        else if (this.props.status === \"locked\")\r\n            return (<Button color=\"danger\" onClick={this.props.onClick} disabled>{this.props.name}</Button>);\r\n        else\r\n            return (<></>);\r\n    }\r\n}\r\n\r\nclass ZoneSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startTime: Math.round(new Date().getTime() / 1000),\r\n            help: false,\r\n            contactFacilitator: false,\r\n            activeHelpTab: \"1\",\r\n            helpTabsClasses: ['active', ''],\r\n            type: \"\",\r\n            exerciseIndex: 0,\r\n            solutions: [],\r\n            helpWindowActiveProblem: 0,\r\n            askedProblem: false,\r\n            problemDesc: \"\",\r\n            facilitatorRoom: \"\"\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n        this.completeVideo = this.completeVideo.bind(this);\r\n        this.toggleHelpWindow = this.toggleHelpWindow.bind(this);\r\n        this.toggleContactFacilitator = this.toggleContactFacilitator.bind(this);\r\n        this.changeHelpActiveTab = this.changeHelpActiveTab.bind(this);\r\n        this.openVideo = this.openVideo.bind(this);\r\n        this.openExercise = this.openExercise.bind(this);\r\n        this.submitExercise = this.submitExercise.bind(this);\r\n        this.changeHelpWindowActiveProblem = this.changeHelpWindowActiveProblem.bind(this);\r\n        this.contactFacilitator = this.contactFacilitator.bind(this);\r\n        this.sendProblem = this.sendProblem.bind(this);\r\n        this.submitProblem = this.submitProblem.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrentContent();\r\n        this.getExerciseSolutions();\r\n    }\r\n\r\n    getCurrentContent(){\r\n        let { sectionProgress } = this.props;\r\n        if (sectionProgress.status) {\r\n            this.setState({\r\n                type: \"video\"\r\n            })\r\n        }\r\n        else {\r\n            if (sectionProgress.video) {\r\n                let type = \"exercise\", exerciseIndex = 0;\r\n                for (exerciseIndex = 0; exerciseIndex < sectionProgress.exercises.length; exerciseIndex++) {\r\n                    if (!sectionProgress.exercises[exerciseIndex].status)\r\n                        break;\r\n                }\r\n                exerciseIndex++;\r\n                this.setState({\r\n                    type: type,\r\n                    exerciseIndex: exerciseIndex\r\n                });\r\n            }\r\n            else {\r\n                let type = \"video\";\r\n                this.setState({\r\n                    type: type\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps !== this.props){\r\n            this.getCurrentContent();\r\n        }\r\n    }\r\n\r\n    getExerciseSolutions() {\r\n        const { helpApis, sectionsLocation, sectionIndex } = this.props;\r\n        const { exerciseIndex } = this.state;\r\n        const { profile, roadmap, pathName, zoneName } = sectionsLocation;\r\n        fetch(`${helpApis.getSolutions}?profile=${profile}&roadmap=${roadmap}&path=${pathName}&zone=${zoneName}&section=${sectionIndex}&exercise=${exerciseIndex}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        solutions: result\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    openVideo() {\r\n        this.setState({\r\n            type: \"video\"\r\n        });\r\n    }\r\n\r\n    openExercise(exerciseIndex) {\r\n        this.setState({\r\n            type: \"exercise\",\r\n            exerciseIndex: exerciseIndex\r\n        })\r\n    }\r\n\r\n    toggle(openId) {\r\n        if (this.state.openId === openId)\r\n            this.setState({\r\n                openId: 0\r\n            });\r\n        else\r\n            this.setState({\r\n                openId: openId,\r\n                startTime: Math.round(new Date().getTime() / 1000)\r\n            });\r\n    }\r\n\r\n    submitExercise(exerciseInput) {\r\n        const { startTime, exerciseIndex } = this.state;\r\n        if (!this.props.sectionProgress.exercises[exerciseIndex - 1].status)\r\n            this.setState({\r\n                exerciseIndex: this.state.exerciseIndex + 1\r\n            })\r\n        this.props.submitExercise(exerciseInput, startTime, exerciseIndex);\r\n    }\r\n\r\n    completeVideo() {\r\n        this.props.completeVideo();\r\n        this.setState({\r\n            type: \"exercise\",\r\n            exerciseIndex: this.state.exerciseIndex + 1\r\n        })\r\n    }\r\n\r\n    toggleHelpWindow() {\r\n        this.setState({\r\n            help: !this.state.help\r\n        });\r\n    }\r\n\r\n    toggleContactFacilitator() {\r\n        this.setState({\r\n            contactFacilitator: !this.state.contactFacilitator\r\n        });\r\n    }\r\n\r\n    changeHelpActiveTab(tabNo) {\r\n        let helpTabsClasses = ['', '', ''];\r\n        helpTabsClasses[tabNo - 1] = 'active';\r\n        this.setState({\r\n            activeHelpTab: tabNo + \"\",\r\n            helpTabsClasses: helpTabsClasses\r\n        })\r\n    }\r\n\r\n    changeHelpWindowActiveProblem(problemIndex) {\r\n        if (problemIndex === this.state.helpWindowActiveProblem)\r\n            this.setState({\r\n                helpWindowActiveProblem: 0\r\n            })\r\n        else\r\n            this.setState({\r\n                helpWindowActiveProblem: problemIndex\r\n            })\r\n    }\r\n\r\n    contactFacilitator() {\r\n        this.setState({\r\n            help: false,\r\n            contactFacilitator: true\r\n        })\r\n    }\r\n\r\n    submitProblem() {\r\n        let problemDesc = JSON.stringify({\r\n            \"problem\": this.state.problemDesc,\r\n            \"email\": this.props.email,\r\n            \"userName\": this.props.userName,\r\n            \"exerciseLocation\": {\r\n                \"profile\": this.props.sectionsLocation.profile,\r\n                \"roadmap\": this.props.sectionsLocation.roadmap,\r\n                \"path\": this.props.sectionsLocation.pathName,\r\n                \"zone\": this.props.sectionsLocation.zoneName,\r\n                \"section\": this.props.sectionIndex,\r\n                \"exercise\": this.state.exerciseIndex\r\n            }\r\n        });\r\n        this.sendProblem(problemDesc);\r\n    }\r\n\r\n    sendProblem(dataToSend) {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: dataToSend,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(this.props.helpApis.getSolutions, requestOptions)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    facilitatorRoom: response.room,\r\n                    askedProblem: true\r\n                })\r\n            })\r\n            .catch(error => {\r\n                alert(\"Some error occured, Please try again later\");\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { sectionData, sectionProgress } = this.props;\r\n        const { type, exerciseIndex, solutions, helpWindowActiveProblem, askedProblem } = this.state;\r\n        const exerciseData = sectionData.exercises, exerciseHtml = [], exerciseNav = [];\r\n        let exercisesIndex = 0, exerciseInfo;\r\n        if (sectionProgress.video) {\r\n            while (exercisesIndex < exerciseData.length && sectionProgress.exercises[exercisesIndex].status) {\r\n                let toggleIndex = exercisesIndex + 2, activeClass = '';\r\n                if (exerciseIndex === toggleIndex - 1)\r\n                    activeClass = ' active';\r\n                exerciseNav.push(<Col className={\"zoneSectionNavButton\" + activeClass}><ExerciseButton status=\"completed\" onClick={() => this.openExercise(toggleIndex - 1)} name={exerciseData[exercisesIndex].code} /></Col>);\r\n                exercisesIndex++;\r\n            }\r\n            if (exercisesIndex < exerciseData.length) {\r\n                let toggleIndex = exercisesIndex + 2, activeClass = '';\r\n                if (exerciseIndex === toggleIndex - 1)\r\n                    activeClass = ' active';\r\n                exerciseNav.push(<Col className={\"zoneSectionNavButton\" + activeClass}><ExerciseButton status=\"start\" onClick={() => this.openExercise(toggleIndex - 1)} name={exerciseData[exercisesIndex].code} /></Col>);\r\n                exercisesIndex++;\r\n            }\r\n        }\r\n        while (exercisesIndex < exerciseData.length) {\r\n            let toggleIndex = exercisesIndex + 2, activeClass = '';\r\n            if (exerciseIndex === toggleIndex - 1)\r\n                activeClass = ' active';\r\n            exerciseNav.push(<Col className={\"zoneSectionNavButton\" + activeClass}><ExerciseButton status=\"locked\" onClick={() => this.openExercise(toggleIndex - 1)} name={exerciseData[exercisesIndex].code} /></Col>);\r\n            exercisesIndex++;\r\n        }\r\n        let tempExercise = []\r\n        for (let i = 0; i < exerciseData.length; i++) {\r\n            tempExercise.push(<Col className=\"zoneSectionNavButton\"><Button>{exerciseData[i].code}</Button></Col>)\r\n        }\r\n        let hintsUI = [], hintNav = [];\r\n        if (sectionData.exercises[exerciseIndex - 1]?.hints?.length > 0) {\r\n            console.log(\"working\")\r\n            for (let i = 0; i < sectionData.exercises[exerciseIndex - 1].hints.length; i++) {\r\n                hintsUI.push(<div>\r\n                    <div className=\"hintHeader\">Hint {i + 1}</div>\r\n                    <div dangerouslySetInnerHTML={{ __html: sectionData.exercises[exerciseIndex - 1].hints[i] }}></div>\r\n                </div>\r\n                )\r\n            }\r\n            hintNav.push(\r\n                <NavItem>\r\n                    <NavLink\r\n                        className={this.state.helpTabsClasses[0]}\r\n                        onClick={() => this.changeHelpActiveTab(1)}\r\n                    >\r\n                        Hint\r\n                    </NavLink>\r\n                </NavItem>\r\n            )\r\n        }\r\n        let solutionsListUI = [];\r\n        for (let i = 0; i < solutions.length; i++) {\r\n            solutionsListUI.push(\r\n                <AccordionItem>\r\n                    <AccordionHeader targetId={i + 1}>\r\n                        {solutions[i].problem}\r\n                    </AccordionHeader>\r\n                    <AccordionBody accordionId={i + 1}>\r\n                        {solutions[i].solution}\r\n                    </AccordionBody>\r\n                </AccordionItem>\r\n                // <Card>\r\n                //     <CardBody>\r\n                //         <CardTitle tag=\"h5\">\r\n                //             {solutions[i].problem}\r\n                //         </CardTitle>\r\n                //         <CardText>\r\n                //             {solutions[i].solution}\r\n                //         </CardText>\r\n                //     </CardBody>\r\n                // </Card>\r\n            )\r\n        }\r\n        let askProblemUI = [];\r\n        if (!askedProblem) {\r\n            askProblemUI = <div>\r\n                <Input\r\n                    type=\"textarea\"\r\n                    placeholder=\"Enter your problem here\"\r\n                    value={this.state.problemDesc}\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            problemDesc: e.target.value\r\n                        });\r\n                    }}\r\n                />\r\n                <Button onClick={this.submitProblem}>Ask your problem</Button>\r\n            </div>\r\n        }\r\n        else {\r\n            askProblemUI = <div>\r\n                Your problem is recorded. \r\n                <br/>Facilitators are available between 9pm to 11pm Monday to Saturday.\r\n                <br/>Please join facilitator room : {this.state.facilitatorRoom}. \r\n                <br/>Hopefully this will resolve your problem.\r\n            </div>\r\n        }\r\n        return (<div className=\"zoneSection\" key={this.props.sectionProgress}>\r\n            <SectionNav activeExercise={exerciseIndex} totalExercises={exerciseData.length} currentExercise isExerciseComplete isActiveSection changeExercise nextExercise/>\r\n            {/* <Container>\r\n                <Row>\r\n                    <Col className=\"zoneSectionNavButton\" xs=\"2\">\r\n                        <VideoButton status={sectionProgress.video} onClick={this.openVideo} />\r\n                    </Col>\r\n                    <Col>Exercise {exerciseIndex} of {exerciseData.length}</Col>\r\n                </Row>\r\n            </Container> */}\r\n            <ZoneSectionContent type={type} completeVideo={this.completeVideo} sectionProgress={sectionProgress} sectionData={sectionData} exerciseIndex={exerciseIndex} toggleHelpWindow={this.toggleHelpWindow} submitExercise={this.submitExercise} />\r\n            <Modal\r\n                isOpen={this.state.help}\r\n            >\r\n                <ModalHeader\r\n                    toggle={this.toggleHelpWindow}\r\n                >\r\n                    Help Window\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Nav tabs>\r\n                        {hintNav}\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={this.state.helpTabsClasses[1]}\r\n                                onClick={() => this.changeHelpActiveTab(2)}\r\n                            >\r\n                                Ask your problem\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n\r\n\r\n                    <TabContent activeTab={this.state.activeHelpTab}>\r\n                        <TabPane tabId=\"1\">\r\n                            {hintsUI}\r\n                        </TabPane>\r\n                        <TabPane tabId=\"2\">\r\n                            <div id=\"searchResultsPane\">\r\n                                <Accordion\r\n                                    open={helpWindowActiveProblem}\r\n                                    toggle={this.changeHelpWindowActiveProblem}\r\n                                >\r\n                                    {solutionsListUI}\r\n                                </Accordion>\r\n                            </div>\r\n                            <Button id=\"newProblem\" color=\"info\" onClick={this.contactFacilitator}>Contact Facilitator</Button>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={this.state.contactFacilitator}\r\n            >\r\n                <ModalHeader\r\n                    toggle={this.toggleContactFacilitator}\r\n                >\r\n                    Describe your Problem\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {askProblemUI}\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default ZoneSection;","import React, { Component } from \"react\";\r\nimport \"./zone-content.css\"\r\n\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Accordion, AccordionItem, AccordionHeader, AccordionBody, Button, Badge } from \"reactstrap\";\r\nimport ZoneSection from \"./zone-section/zone-section\";\r\n\r\nconst ZoneRoute = (props) => {\r\n    const params = useParams();\r\n    const profile = params.profile, roadmap = params.roadmap, pathName = params.pathName, zoneName = params.zoneName;\r\n    return (<ZoneContent lessonProgress={props.lessonProgress} updateLessonProgress={props.updateLessonProgress} mainApis={props.mainApis} roomManagementApis={props.roomManagementApis} helpApis={props.helpApis} email={props.email} userName={props.userName} profile={profile} roadmap={roadmap} pathName={pathName} zoneName={zoneName} />)\r\n}\r\n\r\nclass ZoneContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            sectionsJson: [],\r\n            activeSectionIndex: 0,\r\n            lessonProgress: this.props.lessonProgress,\r\n            sectionsLocation: {\r\n                zoneName: this.props.zoneName,\r\n                profile: this.props.profile,\r\n                roadmap: this.props.roadmap,\r\n                pathName: this.props.pathName,\r\n            },\r\n            sectionsLocationIndex: {},\r\n            room: \"\"\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.completeVideo = this.completeVideo.bind(this);\r\n        this.submitExercise = this.submitExercise.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let sectionsJson = await this.fetchSectionsJson();\r\n        this.checkAndAddNewUserProgress(sectionsJson.sections);\r\n        this.getRoomNo();\r\n    }\r\n\r\n    checkAndAddNewUserProgress(sectionsJson) {\r\n        let { lessonProgress, sectionsLocation } = this.state;\r\n        if (!lessonProgress.find(currProfile => currProfile.profileCode === sectionsLocation.profile)) {\r\n            let newProfile = {\r\n                \"profileCode\": sectionsLocation.profile,\r\n                \"roadmaps\": []\r\n            }\r\n            lessonProgress.push(newProfile);\r\n        }\r\n        const profileIndex = lessonProgress.findIndex(currProfile => currProfile.profileCode === sectionsLocation.profile);\r\n        if (!lessonProgress[profileIndex].roadmaps.find(currRoadmap => currRoadmap.name === sectionsLocation.roadmap)) {\r\n            let newRoadmap = {\r\n                \"name\": sectionsLocation.roadmap,\r\n                \"status\": false,\r\n                \"paths\": []\r\n            }\r\n            lessonProgress[profileIndex].roadmaps.push(newRoadmap);\r\n        }\r\n        const roadmapIndex = lessonProgress[profileIndex].roadmaps.findIndex(currRoadmap => currRoadmap.name === sectionsLocation.roadmap);\r\n        if (!lessonProgress[profileIndex].roadmaps[roadmapIndex].paths.find(currPath => currPath.code === sectionsLocation.pathName)) {\r\n            let newPath = {\r\n                \"code\": sectionsLocation.pathName,\r\n                \"status\": false,\r\n                \"progress\": []\r\n            }\r\n            lessonProgress[profileIndex].roadmaps[roadmapIndex].paths.push(newPath);\r\n        }\r\n        const pathIndex = lessonProgress[profileIndex].roadmaps[roadmapIndex].paths.findIndex(currPath => currPath.code === sectionsLocation.pathName)\r\n        if (!lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress.find(currZone => currZone.name === sectionsLocation.zoneName)) {\r\n            let newZone = {\r\n                \"name\": sectionsLocation.zoneName,\r\n                \"status\": false,\r\n                \"progress\": []\r\n            }\r\n            lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress.push(newZone);\r\n        }\r\n        const zoneIndex = lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress.findIndex(currZone => currZone.name === sectionsLocation.zoneName);\r\n        let activeSectionIndex = lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress.length;\r\n        if (activeSectionIndex === 0) {\r\n            let newZoneJson = [];\r\n            for (let i = 0; i < sectionsJson.length; i++) {\r\n                newZoneJson.push({\r\n                    \"status\": false,\r\n                    \"video\": false,\r\n                    \"exercises\": []\r\n                })\r\n                for (let j = 0; j < sectionsJson[i].exercises.length; j++) {\r\n                    newZoneJson[i].exercises.push({\r\n                        \"status\": false,\r\n                        \"startTime\": \"\",\r\n                        \"endTime\": \"\",\r\n                        \"response\": []\r\n                    })\r\n\r\n                }\r\n            }\r\n            lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress = newZoneJson;\r\n        }\r\n        else {\r\n            for (let i = 0; i < activeSectionIndex; i++) {\r\n                if (!lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[i].status) {\r\n                    activeSectionIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        activeSectionIndex++;\r\n        let sectionsLocationIndex = {\r\n            profileIndex: profileIndex,\r\n            roadmapIndex: roadmapIndex,\r\n            pathIndex: pathIndex,\r\n            zoneIndex: zoneIndex\r\n        }\r\n        this.setState({\r\n            lessonProgress: lessonProgress,\r\n            activeSectionIndex: activeSectionIndex,\r\n            sectionsJson: sectionsJson,\r\n            isLoaded: true,\r\n            sectionsLocationIndex: sectionsLocationIndex\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.zoneName !== this.props.zoneName) {\r\n            this.checkAndAddNewUserProgress();\r\n            this.fetchSectionsJson();\r\n            this.getRoomNo();\r\n            console.log(\"room updated\")\r\n        }\r\n    }\r\n\r\n    fetchSectionsJson = async () => {\r\n        const fetchResponse = await fetch(`${process.env.PUBLIC_URL}/data/profiles/${this.props.profile}/${this.props.roadmap}/${this.props.pathName}/${this.props.zoneName}.json`);\r\n        const data = await fetchResponse.json();\r\n        return data;\r\n    }\r\n\r\n    getRoomNo() {\r\n        let zone = this.state.lessonProgress.find(zone => zone.zoneName === this.props.zoneName);\r\n        if (zone) {\r\n            if (!zone.status) {\r\n                for (let i = 0; i < zone.zoneProgress.length; i++) {\r\n                    if (!zone.zoneProgress[i].status) {\r\n                        fetch(this.props.roomManagementApis.getRoomNo + \"?email=\" + this.props.email + \"&roadmap=foundation&zone=\" + this.state.zoneName + \"&section=Section\" + (i + 1))\r\n                            .then(res => res.json())\r\n                            .then(\r\n                                (result) => {\r\n                                    this.setState({\r\n                                        room: result.roomsName\r\n                                    });\r\n                                },\r\n                                (error) => {\r\n                                    console.error(error);\r\n                                }\r\n                            )\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            fetch(this.props.roomManagementApis.getRoomNo + \"?email=\" + this.props.email + \"&roadmap=foundation&zone=\" + this.state.zoneName + \"&section=Section1\")\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        this.setState({\r\n                            room: result.roomsName\r\n                        });\r\n                    },\r\n                    (error) => {\r\n                        console.error(error);\r\n                    }\r\n                )\r\n        }\r\n    }\r\n\r\n    toggle(cardToggleNo) {\r\n        if (cardToggleNo === this.state.activeSectionIndex)\r\n            this.setState({\r\n                activeSectionIndex: 0\r\n            })\r\n        else\r\n            this.setState({\r\n                activeSectionIndex: cardToggleNo\r\n            })\r\n    }\r\n\r\n    completeVideo() {\r\n        let { lessonProgress, sectionsLocationIndex, activeSectionIndex } = this.state;\r\n        lessonProgress[sectionsLocationIndex.profileIndex].roadmaps[sectionsLocationIndex.roadmapIndex].paths[sectionsLocationIndex.pathIndex].progress[sectionsLocationIndex.zoneIndex].progress[activeSectionIndex - 1].video = true;\r\n        this.updateLessonProgress(lessonProgress, false);\r\n    }\r\n\r\n    submitExercise(exerciseInput, startTime, exerciseIndex) {\r\n        let { lessonProgress, sectionsLocationIndex, activeSectionIndex, sectionsLocation } = this.state;\r\n        let { profile, roadmap, pathName, zoneName } = sectionsLocation;\r\n        let { profileIndex, roadmapIndex, pathIndex, zoneIndex } = sectionsLocationIndex;\r\n        lessonProgress = this.updateLessonProgressOnExerciseAndUpdateRoomIfRequired(lessonProgress, startTime, exerciseInput, sectionsLocationIndex, activeSectionIndex, exerciseIndex);\r\n        \r\n        let exerciseData = {\r\n            \"profile\": profile,\r\n            \"roadmap\": roadmap,\r\n            \"pathName\": pathName,\r\n            \"zoneName\": zoneName,\r\n            \"sectionIndex\": activeSectionIndex-1,\r\n            \"exerciseIndex\": exerciseIndex-1,\r\n            \"timeTaken\": lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].endTime - startTime,\r\n            \"startTime\": startTime\r\n        }\r\n        this.updateLessonProgress(lessonProgress, exerciseData);\r\n        if (this.state.sectionsJson[activeSectionIndex-1].exercises.length === exerciseIndex) {\r\n            activeSectionIndex++;\r\n        }\r\n        this.setState({\r\n            lessonProgress: lessonProgress,\r\n            activeSectionIndex: activeSectionIndex\r\n        })\r\n        // if (updateRoom)\r\n        //     this.getRoomNo();\r\n    }\r\n\r\n    updateLessonProgressOnExerciseAndUpdateRoomIfRequired(lessonProgress, startTime, exerciseInput, sectionsLocationIndex, activeSectionIndex, exerciseIndex){\r\n        let updateRoom=false;\r\n        let { profileIndex, roadmapIndex, pathIndex, zoneIndex } = sectionsLocationIndex;\r\n        lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].status = true;\r\n        lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].startTime = startTime;\r\n        lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].endTime = Math.round(new Date().getTime() / 1000);\r\n        lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].response.push(exerciseInput);\r\n        if (lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises.length === exerciseIndex) {\r\n            lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].status = true;\r\n            if (lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress.length === activeSectionIndex){\r\n                lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].status = true\r\n            }\r\n            else\r\n                updateRoom = true;\r\n        }\r\n        return lessonProgress;\r\n    }\r\n\r\n    updateLessonProgress(lessonProgress, exerciseUpdate) {\r\n        this.props.updateLessonProgress(lessonProgress);\r\n        var lessonProgressDetails = JSON.stringify({\r\n            \"email\": this.props.email,\r\n            \"lessonProgress\": lessonProgress,\r\n            \"exerciseAnalytics\": exerciseUpdate\r\n        });\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: lessonProgressDetails,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(this.props.mainApis.updateLesson, requestOptions)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n                let result = JSON.parse(response);\r\n                if (result.status !== 200) {\r\n                    alert(\"Couldn't update progress to server\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert(\"Couldn't update progress to server\");\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, lessonProgress, sectionsJson, activeSectionIndex, room, sectionsLocation, sectionsLocationIndex } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            let sectionsHtml = [], sectionPos = 0, zoneProgress, zoneIndex, moveToNextZone = [];\r\n            zoneProgress = lessonProgress[sectionsLocationIndex.profileIndex].roadmaps[sectionsLocationIndex.roadmapIndex].paths[sectionsLocationIndex.pathIndex].progress[sectionsLocationIndex.zoneIndex].progress;\r\n            // zoneProgress = lessonProgress.find(zone => zone.zoneName === zoneName).zoneProgress;\r\n            // zoneIndex = lessonProgress.findIndex(zone => zone.zoneName === zoneName);\r\n            // if (lessonProgress.find(zone => zone.zoneName === zoneName).status && zonesJson.length !== (zoneIndex + 1)) {\r\n            //     moveToNextZone.push(\r\n            //         <Card\r\n            //             body\r\n            //             className=\"text-center\"\r\n            //         >\r\n            //             <CardTitle tag=\"h5\">\r\n            //                 Zone Completed\r\n            //             </CardTitle>\r\n            //             <CardText>\r\n            //                 Congratulations on completing this zone, you can move to next zone by clicking on the button below.\r\n            //             </CardText>\r\n            //             <Link to={`/zone/${zonesJson[zoneIndex + 1].name}`}>\r\n            //                 <Button color=\"primary\">Go to Next Zone</Button>\r\n            //             </Link>\r\n            //         </Card>\r\n            //     )\r\n            // }\r\n            while (sectionPos < sectionsJson.length && zoneProgress[sectionPos].status === true) {\r\n                let toggleValue = sectionPos + 1;\r\n                sectionsHtml.push(\r\n                    <AccordionItem>\r\n                        <AccordionHeader targetId={toggleValue}>\r\n                            {sectionsJson[sectionPos].desc}\r\n                        </AccordionHeader>\r\n                        <AccordionBody accordionId={toggleValue}>\r\n                            <ZoneSection completeVideo={this.completeVideo} submitExercise={this.submitExercise} sectionProgress={zoneProgress[sectionPos]} sectionData={sectionsJson[sectionPos]} helpApis={this.props.helpApis} sectionsLocation={sectionsLocation} sectionIndex={toggleValue-1} email={this.props.email} userName={this.props.userName} />\r\n                        </AccordionBody>\r\n                    </AccordionItem>\r\n                );\r\n                sectionPos++;\r\n            }\r\n            if (sectionPos < sectionsJson.length) {\r\n                let roomInfo = [], toggleValue = sectionPos + 1;\r\n                if (activeSectionIndex === sectionPos + 1)\r\n                    roomInfo.push(\r\n                        <Badge color=\"primary\">{room}</Badge>\r\n                    )\r\n                sectionsHtml.push(\r\n                    <AccordionItem>\r\n                        <AccordionHeader targetId={toggleValue}>\r\n                            {sectionsJson[sectionPos].desc}\r\n                            {roomInfo}\r\n                        </AccordionHeader>\r\n                        <AccordionBody accordionId={toggleValue}>\r\n                            <ZoneSection completeVideo={this.completeVideo} submitExercise={this.submitExercise} sectionProgress={zoneProgress[sectionPos]} sectionData={sectionsJson[sectionPos]} helpApis={this.props.helpApis} sectionsLocation={sectionsLocation} sectionIndex={toggleValue-1} email={this.props.email} userName={this.props.userName} />\r\n                        </AccordionBody>\r\n                    </AccordionItem>\r\n                );\r\n                sectionPos++;\r\n            }\r\n            while (sectionPos < sectionsJson.length) {\r\n                let toggleValue = sectionPos + 1;\r\n                sectionsHtml.push(\r\n                    <AccordionItem>\r\n                        <AccordionHeader targetId={toggleValue}>\r\n                            {sectionsJson[sectionPos].desc}\r\n                        </AccordionHeader>\r\n                    </AccordionItem>\r\n                );\r\n                sectionPos++;\r\n            }\r\n            return (\r\n                <div key={this.props.zoneName} className=\"sections\">\r\n                    <Link to={`/${sectionsLocation.profile}/${sectionsLocation.roadmap}/${sectionsLocation.pathName}`}><Button color=\"primary\">Back to Home</Button></Link>\r\n                    <Accordion open={this.state.activeSectionIndex} toggle={this.toggle}>\r\n                        {sectionsHtml}\r\n                    </Accordion>\r\n                    {/* {moveToNextZone} */}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ZoneRoute;","import React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\n\r\n// const NavigateToStartPage = ({ nav }) => {\r\n//     const navigate = useNavigate();\r\n\r\n//     if (nav)\r\n//         navigate('/start-page');\r\n\r\n//     return (\r\n//         <></>\r\n//     );\r\n// }\r\n\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emails: []\r\n        }\r\n        this.signUpAccount = this.signUpAccount.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(this.props.signUpApis.getEmails)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        emails: result\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    signUpAccount(event) {\r\n        event.preventDefault();\r\n        let isEmpty = this.checkEmptyValues();\r\n        if (isEmpty)\r\n            return;\r\n        if (this.state.emails.find(email => email === this.email.value)) {\r\n            alert(\"Account with this email altready exists\");\r\n            return;\r\n        }\r\n        if (this.password.value !== this.confirmPassword.value) {\r\n            alert(\"Passwords didn't match\");\r\n            return;\r\n        }\r\n        var newUserData = JSON.stringify({\r\n            \"emailId\": this.email.value,\r\n            \"name\": this.userName.value,\r\n            \"password\": this.password.value,\r\n            \"role\": \"Learner\"\r\n        });\r\n        this.sendSignUpToServerAndReportToUser(newUserData);\r\n    }\r\n\r\n    checkEmptyValues() {\r\n        if (this.email.value.trim() === \"\") {\r\n            alert(\"Please Enter your Email ID\");\r\n            return true;\r\n        }\r\n        if (this.userName.value.trim() === \"\") {\r\n            alert(\"Please Enter your User Name\");\r\n            return true;\r\n        }\r\n        if (this.password.value.length < 8) {\r\n            alert(\"Your password must contain atleast 8 characters\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    sendSignUpToServerAndReportToUser(dataToSend) {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: dataToSend,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(this.props.signUpApis.createUser, requestOptions)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n                let result = JSON.parse(response);\r\n                if (result.statusCode === 200) {\r\n                    alert(result.body);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert(\"Account Creation Failed\");\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"signup\">\r\n                <h1>Sign up to start your journey</h1>\r\n                <Form onSubmit={this.signUpAccount}>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"signupEmail\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter your email ID\"\r\n                            type=\"email\"\r\n                            innerRef={(input) => this.email = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"signupUserName\"\r\n                            name=\"UserName\"\r\n                            placeholder=\"Enter your User Name\"\r\n                            type=\"text\"\r\n                            innerRef={(input) => this.userName = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"signupPassword\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            type=\"password\"\r\n                            innerRef={(input) => this.password = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"signupConfirmPassword\"\r\n                            name=\"confirmPassword\"\r\n                            placeholder=\"Re-Enter your password\"\r\n                            type=\"password\"\r\n                            innerRef={(input) => this.confirmPassword = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Create Your Account\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\n\r\nconst NavigateToHome = ({ nav, role }) => {\r\n    const navigate = useNavigate();\r\n\r\n    if (nav) {\r\n        if (role === \"Learner\")\r\n            navigate('/home');\r\n        else if (role === \"Facilitator\")\r\n            navigate('/facilitator');\r\n        else\r\n            alert(\"Some error occured\");\r\n    }\r\n\r\n    return (\r\n        <></>\r\n    );\r\n}\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navigate: false,\r\n            role: \"\"\r\n        }\r\n        this.login = this.login.bind(this);\r\n    }\r\n    login(event) {\r\n        event.preventDefault();\r\n        fetch(`${this.props.loginApis.loginUser}?email=${this.email.value.trim()}&password=${this.password.value}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result.authorized) {\r\n                        this.props.getLessonProgressEmailAndUserName(result.lessonProgress, this.email.value.trim(), result.name);\r\n                        this.setState({\r\n                            navigate: true,\r\n                            role: result.role\r\n                        })\r\n                    }\r\n                    else\r\n                        alert(\"Incorrect email or password\");\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"login\">\r\n                <h1>Login to your account</h1>\r\n                <Form onSubmit={this.login}>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"loginEmail\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter your email ID\"\r\n                            type=\"email\"\r\n                            innerRef={(input) => this.email = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"loginPassword\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            type=\"password\"\r\n                            innerRef={(input) => this.password = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Login\r\n                    </Button>\r\n                    <NavigateToHome nav={this.state.navigate} role={this.state.role} />\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Button, Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './start-page.css';\r\nimport SignUp from \"../signup/signup\";\r\nimport Login from \"../login/login\";\r\n\r\nclass StepTile extends Component {\r\n    render() {\r\n        return (\r\n            <Card className='stepTile'>\r\n                <CardImg\r\n                    alt=\"Card image cap\"\r\n                    src={this.props.imgSrc}\r\n                    top\r\n                    width=\"100%\"\r\n                />\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">\r\n                        {this.props.title}\r\n                    </CardTitle>\r\n                    <CardText>\r\n                        {this.props.content}\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>);\r\n    }\r\n}\r\n\r\nclass FeatureTile extends Component {\r\n    render() {\r\n        let img = <img src={this.props.imgSrc} className={this.props.float} />\r\n        let infoClass = this.props.float === \"left\" ? \"right\" : \"left\";\r\n        let content = <div className={infoClass + \" info\"}>\r\n            <h2 className=\"title\">{this.props.title}</h2>\r\n            <div className=\"content\">{this.props.content}</div>\r\n        </div>\r\n        if (this.props.float === \"left\")\r\n            return (\r\n                <div className=\"featureTile\">\r\n                    {img}\r\n                    {content}\r\n                </div>\r\n            )\r\n        else\r\n            return (\r\n                <div className=\"featureTile\">\r\n                    {content}\r\n                    {img}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nclass StartPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            steps: [\r\n                {\r\n                    placement: 'bottom',\r\n                    title: 'Chose Profile',\r\n                    body: 'Understand what someone in a specific profile does. How does this work affect people. If this looks exciting to you, understand what are the essential qualities to do well in this area. If this seems a good match with you, go for it',\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/profile.jpg\",\r\n                    text: 'Step 1'\r\n                },\r\n                {\r\n                    placement: 'bottom',\r\n                    title: 'Select Guide',\r\n                    body: 'Browse through the list of guides, who take people through the journey to develop a specific profile. Each guide takes people through a unique roadmap that they have conceptualised through their experience. Understand what they expect in terms of prerequisite and what is expected from you. Select the guide that seems suitable to you',\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/guide.jpg\",\r\n                    text: 'Step 2'\r\n                },\r\n                {\r\n                    placement: 'bottom',\r\n                    title: 'Walk the Roadmap',\r\n                    body: 'Walk through the roadmap with your guide. You will be supported by your fellow learners and a group of facilitators. As you walk through the journey you can expect to learn not only the subject but other soft skills that your guide has learnt through his/her own experience. And on top of it you will earn the references, that will help you get connected in the industry for a suitable opening',\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/roadmap.jpg\",\r\n                    text: 'Step 3'\r\n                }\r\n\r\n            ],\r\n            features: [\r\n                {\r\n                    title: \"Trust\",\r\n                    content: \"Verified experienced guides taking learners through an effective roadmap. These roadmaps are crafted out of their own rich experience earned from the years of great work.\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/trust.jpg\",\r\n                },\r\n                {\r\n                    title: \"Focus\",\r\n                    content: \"Learners are protected from confusion arising out of new technologies emerging all the time\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/focus.jpg\",\r\n                },\r\n                {\r\n                    title: \"Consistency\",\r\n                    content: \"Along with learning at their own pace, learners are supported by learning groups, these groups interact regularly through conference calls. This helps in progressing faster, staying motivated, and embracing interpersonal skills that are critical to be effective in the complex domain of software development.\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/persistence.jpg\",\r\n                },\r\n                {\r\n                    title: \"Speed\",\r\n                    content: \"AI powered support framework, that helps the learners move ahead when they get stuck, along with access to facilitators through conference calls\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/speed.jpg\",\r\n                },\r\n                {\r\n                    title: \"Growth\",\r\n                    content: \"Possibility to work as a facilitator, that helps in improving the conceptual understanding, along with the growth in different soft skills like listening, communication and problem solving\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/growth.jpg\",\r\n                },\r\n                {\r\n                    title: \"Opportunity\",\r\n                    content: \"Opportunity to build interesting solutions as a development partner, while being facilitated by industry experts. This helps in improving problem solving capabilities, strengthening personal brand, and it may also lead to employment opportunities, or may be starting their own business.\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/opportunity.jpg\",\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    render() {\r\n\r\n        return (<div className=\"mainpage\" id='start_page'>\r\n            <h1>Everyone can become a software developer</h1>\r\n            <p>Irrespective of age, prior education, existing profession, marital status etc.</p>\r\n            <div id=\"steps\">\r\n                {this.state.steps.map((step, i) => {\r\n                    return <StepTile key={i} title={step.title} id={i} content={step.body} imgSrc={step?.imgSrc} />;\r\n                })}\r\n            </div>\r\n            <div id=\"signupLogin\">\r\n                <SignUp signUpApis={this.props.signUpApis} />\r\n                <Login loginApis={this.props.loginApis} getLessonProgressEmailAndUserName={this.props.getLessonProgressEmailAndUserName} />\r\n            </div>\r\n            <div>\r\n                {this.state.features.map((feature, i) => {\r\n                    return <FeatureTile key={i} title={feature.title} content={feature.content} imgSrc={feature.imgSrc} float={i % 2 === 0 ? \"left\" : \"right\"} />\r\n                })}\r\n            </div>\r\n            <div className=\"footer\">\r\n                <section class=\"call-to-action text-white text-center\" id=\"contactus\">\r\n                    <div class=\"contact-info container position-relative\" id=\"contactinfo\">\r\n                        <div class=\"section-overlay-layer\">\r\n                            <div class=\"container\">\r\n                                <div class=\"row contact-links\">\r\n\r\n                                    <div class=\"col-sm-4 contact-link-box col-xs-12\">\r\n                                        <div class=\"icon-container\"><span class=\"icon-basic-mail colored-text\"></span></div>\r\n                                        <a href=\"mailto:sakhilearn@gmail.com\" class=\"strong\">sakhilearn@gmail.com</a>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-4 contact-link-box col-xs-12\">\r\n                                        <div class=\"icon-container\"><span class=\"icon-basic-geolocalize-01 colored-text\"></span></div>\r\n                                        <a href=\"https://www.google.com/maps/place/SG+Beta+Tower/@28.667001,77.3814773,17z/data=!3m1!4b1!4m5!3m4!1s0x390cf0740ec8d2cf:0x5ef5cff2a183e57!8m2!3d28.6670086!4d77.3836584\" class=\"strong\">\r\n                                            21, SG Beta Tower, Secor 3, Vasundhara, Ghaziabad, UP, India 201012 </a>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-4 contact-link-box col-xs-12\">\r\n                                        <div class=\"icon-container\"><span class=\"icon-social-twitter colored-text\"></span></div>\r\n                                        <a href=\"https://twitter.com/sakhilearn\" class=\"strong\">@sakhilearn</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default StartPage;","import { Component } from \"react\";\r\nimport \"./home.css\";\r\nimport { Button, Card, CardBody, CardSubtitle, CardText, CardTitle } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsArrowRight } from \"react-icons/bs\"\r\n\r\nclass Profile extends Component {\r\n    inConstruction() {\r\n        alert(\"Method in construction\");\r\n    }\r\n    render() {\r\n        const { profile, profileProgress } = this.props;\r\n        let segmentsGroup = [], profileIndex = 0;\r\n        if (profileProgress) {\r\n            while (profileIndex < profileProgress.length && profileProgress[profileIndex].status) {\r\n                const rightArrow = [];\r\n\r\n                if (profileIndex !== profile.roadmaps[0].path.length - 1)\r\n                    rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n                if (profile.roadmaps[0].path[profileIndex].code && profile.roadmaps[0].path[profileIndex].file)\r\n                    segmentsGroup.push(<div>\r\n                        <Link to={`/${profile.code}/${profile.roadmaps[0].name}/${profile.roadmaps[0].path[profileIndex].code}`}><Button color=\"success\">{profile.roadmaps[0].path[profileIndex].name}</Button></Link>\r\n                        {rightArrow}\r\n                    </div>);\r\n                else\r\n                    segmentsGroup.push(<div>\r\n                        <Button color=\"success\" onClick={this.inConstruction}>{profile.roadmaps[0].path[profileIndex].name}</Button>\r\n                        {rightArrow}\r\n                    </div>);\r\n                profileIndex++;\r\n            }\r\n            if (profileIndex < profileProgress.length) {\r\n                const rightArrow = [];\r\n                if (profileIndex !== profile.roadmaps[0].path.length - 1)\r\n                    rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n                if (profile.roadmaps[0].path[profileIndex].code && profile.roadmaps[0].path[profileIndex].file)\r\n                    segmentsGroup.push(<div>\r\n                        <Link to={`/${profile.code}/${profile.roadmaps[0].name}/${profile.roadmaps[0].path[profileIndex].code}`}><Button color=\"warning\">{profile.roadmaps[0].path[profileIndex].name}</Button></Link>\r\n                        {rightArrow}\r\n                    </div>);\r\n                else\r\n                    segmentsGroup.push(<div>\r\n                        <Button color=\"warning\" onClick={this.inConstruction}>{profile.roadmaps[0].path[profileIndex].name}</Button>\r\n                        {rightArrow}\r\n                    </div>);\r\n            }\r\n            else {\r\n                const rightArrow = [];\r\n\r\n                if (profileIndex !== profile.roadmaps[0].path.length - 1)\r\n                    rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n                if (profile.roadmaps[0].path[profileIndex].code && profile.roadmaps[0].path[profileIndex].file)\r\n                    segmentsGroup.push(<div>\r\n                        <Link to={`/${profile.code}/${profile.roadmaps[0].name}/${profile.roadmaps[0].path[profileIndex].code}`}><Button color=\"primary\">{profile.roadmaps[0].path[profileIndex].name}</Button></Link>\r\n                        {rightArrow}\r\n                    </div>);\r\n                else\r\n                    segmentsGroup.push(<div>\r\n                        <Button color=\"primary\" onClick={this.inConstruction}>{profile.roadmaps[0].path[profileIndex].name}</Button>\r\n                        {rightArrow}\r\n                    </div>);\r\n            }\r\n            profileIndex++;\r\n\r\n        }\r\n        else if (profileIndex < profile.roadmaps[0].path.length) {\r\n            const rightArrow = [];\r\n\r\n            if (profileIndex !== profile.roadmaps[0].path.length - 1)\r\n                rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n            if (profile.roadmaps[0].path[profileIndex].code && profile.roadmaps[0].path[profileIndex].file)\r\n                segmentsGroup.push(<div>\r\n                    <Link to={`/${profile.code}/${profile.roadmaps[0].name}/${profile.roadmaps[0].path[profileIndex].code}`}><Button color=\"primary\">{profile.roadmaps[0].path[profileIndex].name}</Button></Link>\r\n                    {rightArrow}\r\n                </div>);\r\n            else\r\n                segmentsGroup.push(<div>\r\n                    <Button color=\"primary\" onClick={this.inConstruction}>{profile.roadmaps[0].path[profileIndex].name}</Button>\r\n                    {rightArrow}\r\n                </div>);\r\n            profileIndex++;\r\n        }\r\n        for (let i = profileIndex; i < profile.roadmaps[0].path.length; i++) {\r\n            const rightArrow = [];\r\n\r\n            if (i !== profile.roadmaps[0].path.length - 1)\r\n                rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n\r\n            segmentsGroup.push(<div>\r\n                <Button color=\"danger\" disabled>{profile.roadmaps[0].path[i].name}</Button>\r\n                {rightArrow}\r\n            </div>);\r\n        }\r\n        return (<div className=\"roadmap\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">\r\n                        {profile.name}\r\n                    </CardTitle>\r\n                    <CardSubtitle\r\n                        className=\"mb-2 text-muted\"\r\n                        tag=\"h6\"\r\n                    >\r\n                        {profile.desc}\r\n                    </CardSubtitle>\r\n                    <CardText>\r\n                        Here is the roadmap:-\r\n                    </CardText>\r\n                    <div className=\"segments\">\r\n                        {segmentsGroup}\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            profiles: [],\r\n            isLoaded: false,\r\n            error: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(process.env.PUBLIC_URL + \"/data/profiles.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        profiles: result,\r\n                        isLoaded: true\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    render() {\r\n        const { error, isLoaded, profiles } = this.state;\r\n        const { lessonProgress } = this.props;\r\n        let roadmapsHtml = [];\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            for (let i = 0; i < profiles.length; i++) {\r\n                let profileProgress = lessonProgress.find(lesson => lesson.profileCode === profiles[i].code)?.roadmaps[0].paths;\r\n                roadmapsHtml.push(<Profile profile={profiles[i]} profileProgress={profileProgress} />)\r\n            }\r\n            return (<div key={this.props.lessonProgress}>\r\n                {roadmapsHtml}\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}","import { Switch } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport './facilitator.css';\r\n\r\nconst AntSwitch = styled(Switch)(({ theme }) => ({\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: 'flex',\r\n    '&:active': {\r\n      '& .MuiSwitch-thumb': {\r\n        width: 15,\r\n      },\r\n      '& .MuiSwitch-switchBase.Mui-checked': {\r\n        transform: 'translateX(9px)',\r\n      },\r\n    },\r\n    '& .MuiSwitch-switchBase': {\r\n      padding: 2,\r\n      '&.Mui-checked': {\r\n        transform: 'translateX(12px)',\r\n        color: '#fff',\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\r\n      width: 12,\r\n      height: 12,\r\n      borderRadius: 6,\r\n      transition: theme.transitions.create(['width'], {\r\n        duration: 200,\r\n      }),\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      borderRadius: 16 / 2,\r\n      opacity: 1,\r\n      backgroundColor:\r\n        theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\r\n      boxSizing: 'border-box',\r\n    },\r\n  }));\r\n  \r\n\r\nclass Facilitator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            problemsList: [],\r\n            solutionsList: [],\r\n            solvedProblemsList: [],\r\n            activeProblem: -1,\r\n            exerciseDesc: \"\",\r\n            documentSolutions: false\r\n        }\r\n        this.updateActiveProblem = this.updateActiveProblem.bind(this);\r\n        this.toggleMode = this.toggleMode.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${this.props.facilitatorApis.getProblemList}`)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    problemsList: result.filter(problem => problem.status === \"Unresolved\"),\r\n                    solutionsList: result.filter(problem => problem.status === \"Resolved\") \r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    updateActiveProblem(problemIndex) {\r\n        const { problemsList } = this.state\r\n        fetch(`${process.env.PUBLIC_URL}/data/profiles/${problemsList[problemIndex].exerciseLocation.profileCode}/${problemsList[problemIndex].exerciseLocation.roadmapName}/${problemsList[problemIndex].exerciseLocation.pathCode}/${problemsList[problemIndex].exerciseLocation.zoneName}.json`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        exerciseDesc: result.sections[problemsList[problemIndex].exerciseLocation.sectionIndex].exercises[problemsList[problemIndex].exerciseLocation.exerciseIndex].desc,\r\n                        activeProblem: problemIndex\r\n                    });\r\n                }\r\n            )\r\n        this.setState({\r\n            activeProblem: problemIndex\r\n        })\r\n    }\r\n\r\n    toggleMode(){\r\n        this.setState({\r\n            documentSolutions: !this.state.documentSolutions\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { problemsList, activeProblem, exerciseDesc } = this.state;\r\n        let problemListUI = [];\r\n        for (let i = 0; i < problemsList.length; i++) {\r\n            let index = i;\r\n            if (i === activeProblem)\r\n                problemListUI.push(<ListGroupItem\r\n                    active\r\n                    tag=\"button\"\r\n                    className='listItem'\r\n                    onClick={() => this.updateActiveProblem(index)}\r\n                >\r\n                    {problemsList[i].userName}\r\n                </ListGroupItem>);\r\n            else {\r\n                problemListUI.push(<ListGroupItem\r\n                    tag=\"button\"\r\n                    className='listItem'\r\n                    onClick={() => this.updateActiveProblem(index)}\r\n                >\r\n                    {problemsList[i].userName}\r\n                </ListGroupItem>);\r\n            }\r\n        }\r\n        return (<div id='facilitator'>\r\n            <div id=\"problemsList\">\r\n                <div id=\"toggleMode\">\r\n                    Document Solutions\r\n                    <AntSwitch\r\n                        checked={this.state.documentSolutions}\r\n                        onChange={this.toggleMode}\r\n                        color=\"default\"\r\n                    />\r\n                </div>\r\n                <ListGroup>\r\n                    {problemListUI}\r\n                </ListGroup>\r\n            </div>\r\n            <div id=\"problemAndExerciseDesc\">\r\n                <div id=\"exerciseDesc\" dangerouslySetInnerHTML={{ __html: exerciseDesc }}></div>\r\n                <div id=\"problemDesc\">\r\n                    <h5>{problemsList[activeProblem]?.name}</h5>\r\n                    <div>{problemsList[activeProblem]?.desc}</div>\r\n                </div>\r\n            </div>\r\n            <div id=\"existingSolutionsList\"></div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Facilitator;","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Spinner } from 'reactstrap';\r\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n\r\nimport Header from './components/header/header';\r\nimport MainRoute from './components/main/main';\r\nimport ZoneRoute from './components/zone-content/zone-content'\r\nimport StartPage from './components/start-page/start-page';\r\nimport SignUp from './components/signup/signup';\r\nimport Login from './components/login/login';\r\nimport Home from './components/home/home';\r\nimport Facilitator from './components/facilitator/facilitator';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      baseFile: false,\r\n      lessonProgress: [],\r\n      email: \"\",\r\n      userName: false\r\n    }\r\n    this.getLessonProgressEmailAndUserName = this.getLessonProgressEmailAndUserName.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.updateLessonProgress = this.updateLessonProgress.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch(process.env.PUBLIC_URL + \"/data/index.json\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            baseFile: result\r\n          });\r\n        }\r\n      )\r\n  }\r\n  getLessonProgressEmailAndUserName(lessonProgress, email, userName) {\r\n    this.setState({\r\n      lessonProgress: lessonProgress,\r\n      email: email,\r\n      userName: userName\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.setState({\r\n      userName: false\r\n    })\r\n  }\r\n\r\n  updateLessonProgress(lessonProgress){\r\n    this.setState({\r\n      lessonProgress: lessonProgress\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.baseFile)\r\n      return (\r\n        <div className=\"App\">\r\n          <Router>\r\n            <Header userName={this.state.userName} email={this.state.email} logoutApi={this.state.baseFile.apis.login.logout} logout={this.logout} />\r\n            <Routes>\r\n              <Route exact path=\"/\" element={<Navigate to=\"/start-page\" />} />\r\n              <Route exact path=\"/start-page\" element={<StartPage signUpApis={this.state.baseFile.apis.signUp} loginApis={this.state.baseFile.apis.login} getLessonProgressEmailAndUserName={this.getLessonProgressEmailAndUserName} />} />\r\n              <Route exact path=\"/facilitator\" element={<Facilitator facilitatorApis={this.state.baseFile.apis.facilitator} />} />\r\n              <Route exact path=\"/home\" element={<Home lessonProgress={this.state.lessonProgress} />} />\r\n              <Route exact path=\"/:profile/:roadmap/:pathName\" element={<MainRoute lessonProgress={this.state.lessonProgress} />} />\r\n              <Route exact path=\"/:profile/:roadmap/:pathName/:zoneName\" element={<ZoneRoute lessonProgress={this.state.lessonProgress} mainApis={this.state.baseFile.apis.main} roomManagementApis={this.state.baseFile.apis.roomManagement} email={this.state.email} userName={this.state.userName} updateLessonProgress={this.updateLessonProgress} helpApis={this.state.baseFile.apis.help} />} />\r\n            </Routes>\r\n          </Router>\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"App\">\r\n          <Header />\r\n          <div id=\"loadingApp\">\r\n            <Spinner id='appSpinner'>\r\n              Loading...\r\n            </Spinner>\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}