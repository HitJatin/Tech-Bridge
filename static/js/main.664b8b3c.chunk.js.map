{"version":3,"sources":["components/header/header.js","components/main/zone/zone.js","components/main/main.js","components/zone-content/zone-section/zone-section.js","components/zone-content/zone-content.js","components/start-page/start-page.js","components/signup/signup.js","components/login/login.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","navMenuOpen","navigate","logoutModal","toggle","bind","logout","closeModal","this","setState","logoutData","JSON","stringify","email","myHeaders","Headers","append","requestOptions","method","headers","body","redirect","fetch","logoutApi","then","response","text","catch","error","console","userToggle","userName","push","isOpen","caret","onClick","id","color","href","process","dark","fixed","Component","Zone","button","zoneData","status","zoneDesc","disabled","to","name","desc","className","tag","Main","zonesJson","zones","i","length","lessonProgress","zonesHtml","userZones","resumeZone","j","zoneName","find","zone","VideoButton","ExerciseButton","ZoneSection","openId","startTime","sectionProgress","help","activeHelpTab","helpTabsClasses","sendExerciseResponse","completeVideo","toggleHelpWindow","changeHelpActiveTab","Math","round","Date","getTime","exerciseIndex","exercises","tabNo","sectionData","exerciseData","exerciseHtml","completeVideoButtton","exercisesIndex","video","toggleIndex","code","dangerouslySetInnerHTML","__html","type","placeholder","value","onChange","e","target","width","controls","src","tabs","activeTab","tabId","ZoneContent","isLoaded","sectionsJson","activeCardNo","room","completeExercise","fetchSectionsJson","getRoomNo","prevProps","log","res","json","result","sections","activeSectionIndex","zoneProgress","roomManagementApis","roomsName","cardToggleNo","zoneIndex","sectionIndex","updateLessonProgress","exerciseResponse","updateRoom","endTime","exerciseUpdate","lessonProgressDetails","mainApis","updateLesson","parse","alert","message","sectionsHtml","sectionPos","moveToNextZone","newZoneJson","findIndex","toggleValue","targetId","accordionId","roomInfo","open","ZoneRoute","useParams","StartPage","NavigateToStartPage","nav","useNavigate","SignUp","emails","signUpAccount","signUpApis","getEmails","event","preventDefault","password","confirmPassword","newUserData","sendSignUpToServerAndReportToUser","dataToSend","createUser","statusCode","onSubmit","for","innerRef","input","NavigateToHome","Login","login","loginApis","loginUser","authorized","getLessonProgressEmailAndUserName","App","baseFile","apis","exact","path","element","signUp","main","roomManagement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.664b8b3c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Navbar, NavbarBrand, NavbarText, Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navMenuOpen: false,\r\n            navigate: false,\r\n            logoutModal: false\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n    toggle() {\r\n        this.setState({\r\n            navMenuOpen: !this.state.navMenuOpen\r\n        });\r\n    }\r\n    logout() {\r\n        let logoutData = JSON.stringify({\r\n            \"email\": this.props.email\r\n        });\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: logoutData,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(this.props.logoutApi, requestOptions)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n                this.props.logout();\r\n                this.setState({\r\n                    logoutModal: true\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            });\r\n    }\r\n    closeModal() {\r\n        this.setState({\r\n            logoutModal: false\r\n        })\r\n    }\r\n    render() {\r\n        let userToggle = [];\r\n        if (this.props.userName) {\r\n            userToggle.push(\r\n                <NavbarText>\r\n                    <Dropdown toggle={this.toggle} isOpen={this.state.navMenuOpen}>\r\n                        <DropdownToggle caret>\r\n                            {this.props.userName}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            <DropdownItem onClick={this.logout}>Logout</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </NavbarText>\r\n            )\r\n        }\r\n        return (\r\n            <div id=\"navbar\">\r\n                <Modal\r\n                    isOpen={this.state.logoutModal}\r\n                >\r\n                    <ModalHeader>Successfully Logged Out</ModalHeader>\r\n                    <ModalBody>\r\n                        You can go to start page to login again\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" href={process.env.PUBLIC_URL} onClick={this.closeModal}>Start Page</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Navbar\r\n                    color=\"dark\"\r\n                    dark\r\n                    fixed=\"top\"\r\n                >\r\n                    <NavbarBrand href={process.env.PUBLIC_URL}>\r\n                        Tech-Bridge\r\n                    </NavbarBrand>\r\n                    {userToggle}\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport \"./zone.css\";\r\nimport { Button, Card, CardBody, CardTitle, CardText } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Zone extends Component {\r\n    render() {\r\n        const { zoneData, status } = this.props;\r\n        let button, zoneDesc=[];\r\n        if (status === \"locked\")\r\n            button = <Button color=\"danger\" disabled>Locked</Button>;\r\n        if (status === \"completed\")\r\n            button = <Link to={`/zone/${zoneData.name}`}><Button color=\"success\">Completed</Button></Link>;\r\n        if (status === \"start\")\r\n            button = <Link to={`/zone/${zoneData.name}`}><Button color=\"primary\">Start</Button></Link>;\r\n        if (status === \"inprogress\")\r\n            button = <Link to={`/zone/${zoneData.name}`}><Button color=\"warning\">Resume</Button></Link>;\r\n        if(status === \"start\" || status === \"inprogress\"){\r\n            zoneDesc.push(<CardText>{zoneData.desc}</CardText>);\r\n        }\r\n        return (\r\n            <Card className=\"zone\">\r\n                <CardBody className={status}>\r\n                    <CardTitle tag=\"h5\">{zoneData.name}</CardTitle>\r\n                    {/* <CardSubtitle\r\n                        className=\"mb-2 text-muted\"\r\n                        tag=\"h6\"\r\n                    >\r\n                        Card subtitle\r\n                    </CardSubtitle> */}\r\n                    {zoneDesc}\r\n                    {button}\r\n                </CardBody>\r\n            </Card>)\r\n    }\r\n}\r\n\r\nexport default Zone;","import React, { Component } from \"react\";\r\nimport Zone from \"./zone/zone\";\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        const { zonesJson } = this.props;\r\n        let zones = [];\r\n        for (let i = 0; i < zonesJson.length; i++) {\r\n            zones.push(zonesJson[i].name);\r\n        }\r\n        const { lessonProgress } = this.props;\r\n        let zonesHtml = [], i = 0, userZones = [], resumeZone = false;\r\n        for (let j = 0; j < lessonProgress.length; j++) {\r\n            if (lessonProgress[j].status)\r\n                userZones.push(lessonProgress[j].zoneName)\r\n            else {\r\n                resumeZone = true;\r\n            }\r\n        }\r\n        while (i < zones.length) {\r\n            if (userZones.find(zone => zone === zones[i])) {\r\n                zonesHtml.push(<Zone zoneData={zonesJson[i]} status=\"completed\" />)\r\n                i++;\r\n            }\r\n            else\r\n                break;\r\n        }\r\n        if (resumeZone)\r\n            zonesHtml.push(<Zone zoneData={zonesJson[i]} status=\"inprogress\" />)\r\n        else if (i < zones.length)\r\n            zonesHtml.push(<Zone zoneData={zonesJson[i]} status=\"start\" />)\r\n        i++;\r\n        while (i < zones.length) {\r\n            zonesHtml.push(<Zone zoneData={zonesJson[i]} status=\"locked\" />);\r\n            i++;\r\n        }\r\n        return (\r\n            <div className=\"zones\">{zonesHtml}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from \"react\";\r\n\r\nimport { Button, Card, CardBody, CardHeader, CardText, CardTitle, Collapse, Input, InputGroup, Modal, ModalBody, ModalHeader, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\r\n\r\nclass VideoButton extends Component {\r\n    render() {\r\n        if (this.props.status)\r\n            return (<Button className=\"instructionFunction\" color=\"success\" onClick={this.props.onClick}>Watch Again</Button>);\r\n        else\r\n            return (<Button className=\"instructionFunction\" color=\"primary\" onClick={this.props.onClick}>Play</Button>)\r\n    }\r\n}\r\n\r\nclass ExerciseButton extends Component {\r\n    render() {\r\n        if (this.props.status === \"completed\")\r\n            return (<Button className=\"instructionFunction\" color=\"success\" onClick={this.props.onClick}>Completed</Button>);\r\n        else if (this.props.status === \"start\")\r\n            return (<Button className=\"instructionFunction\" color=\"primary\" onClick={this.props.onClick}>Start</Button>);\r\n        else if (this.props.status === \"locked\")\r\n            return (<Button className=\"instructionFunction\" color=\"danger\" onClick={this.props.onClick} disabled>Locked</Button>);\r\n        else\r\n            return (<></>);\r\n    }\r\n}\r\n\r\nclass ZoneSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openId: 0,\r\n            startTime: \"\",\r\n            sectionProgress: this.props.sectionProgress,\r\n            help: false,\r\n            activeHelpTab: \"1\",\r\n            helpTabsClasses: ['active','','','']\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n        this.sendExerciseResponse = this.sendExerciseResponse.bind(this);\r\n        this.completeVideo = this.completeVideo.bind(this);\r\n        this.toggleHelpWindow = this.toggleHelpWindow.bind(this);\r\n        this.changeHelpActiveTab = this.changeHelpActiveTab.bind(this);\r\n    }\r\n\r\n    toggle(openId) {\r\n        if (this.state.openId === openId)\r\n            this.setState({\r\n                openId: 0\r\n            });\r\n        else\r\n            this.setState({\r\n                openId: openId,\r\n                startTime: Math.round(new Date().getTime() / 1000)\r\n            });\r\n    }\r\n\r\n    sendExerciseResponse(exerciseIndex) {\r\n        this.props.sendExerciseResponse(exerciseIndex, this.state.sectionProgress.exercises[exerciseIndex].response, this.state.startTime);\r\n        this.setState({\r\n            openId: 0\r\n        })\r\n    }\r\n\r\n    completeVideo() {\r\n        this.props.completeVideo();\r\n        this.setState({\r\n            openId: 0\r\n        })\r\n    }\r\n\r\n    toggleHelpWindow() {\r\n        this.setState({\r\n            help: !this.state.help\r\n        });\r\n    }\r\n    changeHelpActiveTab(tabNo){\r\n        let helpTabsClasses=['','',''];\r\n        helpTabsClasses[tabNo-1]='active';\r\n        this.setState({\r\n            activeHelpTab: tabNo+\"\",\r\n            helpTabsClasses: helpTabsClasses\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { sectionData } = this.props;\r\n        const exerciseData = sectionData.exercises, exerciseHtml = [], completeVideoButtton = [];\r\n        let exercisesIndex = 0;\r\n        if (!this.state.sectionProgress.video)\r\n            completeVideoButtton.push(<Button color=\"primary\" onClick={() => this.completeVideo()}>Mark Video as complete</Button>)\r\n        else {\r\n            while (exercisesIndex < exerciseData.length && this.state.sectionProgress.exercises[exercisesIndex].status) {\r\n                let toggleIndex = exercisesIndex + 2;\r\n                exerciseHtml.push(\r\n                    <Card>\r\n                        <CardHeader className=\"instructionHeader\">\r\n                            <CardTitle className=\"instruction\">{exerciseData[exercisesIndex].code}</CardTitle>\r\n                            <ExerciseButton status=\"completed\" onClick={() => this.toggle(toggleIndex)} />\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.openId === (toggleIndex)}>\r\n                            <CardBody>\r\n                                <div dangerouslySetInnerHTML={{ __html: exerciseData[exercisesIndex].desc }}></div>\r\n\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    placeholder=\"Enter your response\"\r\n                                    value={this.state.sectionProgress.exercises[exercisesIndex].response}\r\n                                    onChange={(e) => {\r\n                                        let sectionProgress = this.state.sectionProgress;\r\n                                        sectionProgress.exercises[toggleIndex - 2].response = e.target.value\r\n                                        this.setState({\r\n                                            sectionProgress: sectionProgress\r\n                                        })\r\n                                    }}\r\n                                />\r\n                                <Button className=\"exerciseButtons\" color=\"primary\" onClick={() => this.sendExerciseResponse(toggleIndex - 2)} >Submit</Button>\r\n                                <Button className=\"exerciseButtons\" color=\"primary\" onClick={() => this.toggleHelpWindow()}>Ask for help</Button>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                )\r\n                exercisesIndex++;\r\n            }\r\n            if (exercisesIndex < exerciseData.length) {\r\n                let toggleIndex = exercisesIndex + 2;\r\n                exerciseHtml.push(\r\n                    <Card>\r\n                        <CardHeader className=\"instructionHeader\">\r\n                            <CardTitle className=\"instruction\">{exerciseData[exercisesIndex].code}</CardTitle>\r\n                            <ExerciseButton status=\"start\" onClick={() => this.toggle(toggleIndex)} />\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.openId === (toggleIndex)}>\r\n                            <CardBody>\r\n                                <div dangerouslySetInnerHTML={{ __html: exerciseData[exercisesIndex].desc }}></div>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    placeholder=\"Enter your response\"\r\n                                    value={this.state.sectionProgress.exercises[exercisesIndex].response}\r\n                                    onChange={(e) => {\r\n                                        let sectionProgress = this.state.sectionProgress;\r\n                                        sectionProgress.exercises[toggleIndex - 2].response = e.target.value\r\n                                        this.setState({\r\n                                            sectionProgress: sectionProgress\r\n                                        })\r\n                                    }}\r\n                                />\r\n                                <Button className=\"exerciseButtons\" color=\"primary\" onClick={() => this.sendExerciseResponse(toggleIndex - 2)} >Submit</Button>\r\n                                <Button className=\"exerciseButtons\" color=\"primary\" onClick={() => this.toggleHelpWindow()}>Ask for help</Button>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                )\r\n                exercisesIndex++;\r\n            }\r\n        }\r\n        while (exercisesIndex < exerciseData.length) {\r\n            let toggleIndex = exercisesIndex + 2;\r\n            exerciseHtml.push(\r\n                <Card>\r\n                    <CardHeader className=\"instructionHeader\">\r\n                        <CardTitle className=\"instruction\">{exerciseData[exercisesIndex].code}</CardTitle>\r\n                        <ExerciseButton status=\"locked\" onClick={() => this.toggle(toggleIndex)} />\r\n                    </CardHeader>\r\n                    <Collapse isOpen={this.state.openId === (toggleIndex)}>\r\n                        <CardBody>\r\n                            <div dangerouslySetInnerHTML={{ __html: exerciseData[exercisesIndex].desc }}></div>\r\n                            <Input type=\"textarea\" placeholder=\"Enter your response\" />\r\n                            <Button color=\"primary\">Submit</Button>\r\n                        </CardBody>\r\n                    </Collapse>\r\n                </Card>\r\n            )\r\n            exercisesIndex++;\r\n        }\r\n        return (<div>\r\n            <Card>\r\n                <CardHeader className=\"instructionHeader\">\r\n                    <CardTitle className=\"instruction\">Play Course Video</CardTitle>\r\n                    <VideoButton status={this.state.sectionProgress.video} onClick={() => this.toggle(1)} />\r\n                </CardHeader>\r\n                <Collapse isOpen={this.state.openId === 1}>\r\n                    <CardBody>\r\n                        <video width=\"400\" controls>\r\n                            <source src={sectionData.video} type=\"video/mp4\" />\r\n                            Your browser doesn't support HTML video\r\n                        </video>\r\n                        {completeVideoButtton}\r\n                    </CardBody>\r\n                </Collapse>\r\n            </Card>\r\n            {exerciseHtml}\r\n            <Modal\r\n                isOpen={this.state.help}\r\n            >\r\n                <ModalHeader\r\n                    toggle={this.toggleHelpWindow}\r\n                >\r\n                    Help Window\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Nav tabs>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={this.state.helpTabsClasses[0]}\r\n                                onClick={() => this.changeHelpActiveTab(1)}\r\n                            >\r\n                                Hint\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={this.state.helpTabsClasses[1]}\r\n                                onClick={() => this.changeHelpActiveTab(2)}\r\n                            >\r\n                                See Solution\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={this.state.helpTabsClasses[2]}\r\n                                onClick={() => this.changeHelpActiveTab(3)}\r\n                            >\r\n                                Ask your problem\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n\r\n                \r\n                    <TabContent activeTab={this.state.activeHelpTab}>\r\n                        <TabPane tabId=\"1\">\r\n                            This is your hint<br/>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Excepturi laudantium quam fuga aut quo recusandae. Consectetur ex delectus dolores repellendus, exercitationem reiciendis unde laboriosam explicabo esse ducimus tenetur recusandae totam impedit error! Praesentium, fuga exercitationem neque, perferendis nam, debitis cumque repudiandae dolore consectetur quia repellat dignissimos soluta? Tempore, labore blanditiis.\r\n                        </TabPane>\r\n                        <TabPane tabId=\"2\">\r\n                            Solution of the problem<br/>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Excepturi laudantium quam fuga aut quo recusandae. Consectetur ex delectus dolores repellendus, exercitationem reiciendis unde laboriosam explicabo esse ducimus tenetur recusandae totam impedit error! Praesentium, fuga exercitationem neque, perferendis nam, debitis cumque repudiandae dolore consectetur quia repellat dignissimos soluta? Tempore, labore blanditiis.\r\n                        </TabPane>\r\n                        <TabPane tabId=\"3\">\r\n                            <InputGroup>\r\n                                <Input />\r\n                                <Button>Search</Button>\r\n                            </InputGroup>\r\n                            <div id=\"searchResultsPane\">\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <CardTitle tag=\"h5\">\r\n                                            Solution Title\r\n                                        </CardTitle>\r\n                                        <CardText>\r\n                                            Some solution content\r\n                                        </CardText>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <CardTitle tag=\"h5\">\r\n                                            Solution Title\r\n                                        </CardTitle>\r\n                                        <CardText>\r\n                                            Some solution content\r\n                                        </CardText>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <CardTitle tag=\"h5\">\r\n                                            Solution Title\r\n                                        </CardTitle>\r\n                                        <CardText>\r\n                                            Some solution content\r\n                                        </CardText>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <CardTitle tag=\"h5\">\r\n                                            Solution Title\r\n                                        </CardTitle>\r\n                                        <CardText>\r\n                                            Some solution content\r\n                                        </CardText>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <CardTitle tag=\"h5\">\r\n                                            Solution Title\r\n                                        </CardTitle>\r\n                                        <CardText>\r\n                                            Some solution content\r\n                                        </CardText>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <CardTitle tag=\"h5\">\r\n                                            Solution Title\r\n                                        </CardTitle>\r\n                                        <CardText>\r\n                                            Some solution content\r\n                                        </CardText>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </div>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default ZoneSection;","import React, { Component } from \"react\";\r\nimport \"./zone-content.css\"\r\n\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Accordion, AccordionItem, AccordionHeader, AccordionBody, Card, CardTitle, CardText, Button, Badge } from \"reactstrap\";\r\nimport ZoneSection from \"./zone-section/zone-section\";\r\n\r\nconst ZoneRoute = (props) => {\r\n    const params = useParams();\r\n    const zoneName = params.zoneName;\r\n    let j = 0;\r\n    for (let i = 0; i < props.lessonProgress.length; i++) {\r\n        if (props.lessonProgress[i].zoneName === zoneName) {\r\n            while (j < props.lessonProgress[i].zoneProgress.length) {\r\n                if (!props.lessonProgress[i].zoneProgress[j].status) {\r\n                    break;\r\n                }\r\n                j++;\r\n            }\r\n        }\r\n    }\r\n    j++;\r\n    return (<ZoneContent activeSectionIndex={j} zoneName={zoneName} lessonProgress={props.lessonProgress} mainApis={props.mainApis} roomManagementApis={props.roomManagementApis} email={props.email} zonesJson={props.zonesJson} />)\r\n}\r\n\r\nclass ZoneContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            sectionsJson: [],\r\n            activeCardNo: 0,\r\n            lessonProgress: this.props.lessonProgress,\r\n            zoneName: this.props.zoneName,\r\n            room: \"\"\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.completeVideo = this.completeVideo.bind(this);\r\n        this.completeExercise = this.completeExercise.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchSectionsJson();\r\n        this.getRoomNo();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.zoneName !== this.props.zoneName) {\r\n            this.fetchSectionsJson();\r\n            this.getRoomNo();\r\n            console.log(\"room updated\")\r\n        }\r\n    }\r\n\r\n    fetchSectionsJson() {\r\n        fetch(process.env.PUBLIC_URL + \"/data/foundation/\" + this.state.zoneName + \".json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        sectionsJson: result.sections,\r\n                        activeCardNo: this.props.activeSectionIndex\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    getRoomNo() {\r\n        let zone = this.state.lessonProgress.find(zone => zone.zoneName === this.props.zoneName);\r\n        console.log(zone);\r\n        if (zone) {\r\n            if (!zone.status) {\r\n                for (let i = 0; i < zone.zoneProgress.length; i++) {\r\n                    if (!zone.zoneProgress[i].status) {\r\n                        fetch(this.props.roomManagementApis.getRoomNo + \"?email=\" + this.props.email + \"&roadmap=foundation&zone=\" + this.state.zoneName + \"&section=Section\" + (i + 1))\r\n                            .then(res => res.json())\r\n                            .then(\r\n                                (result) => {\r\n                                    this.setState({\r\n                                        room: result.roomsName\r\n                                    });\r\n                                },\r\n                                (error) => {\r\n                                    console.error(error);\r\n                                }\r\n                            )\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            fetch(this.props.roomManagementApis.getRoomNo + \"?email=\" + this.props.email + \"&roadmap=foundation&zone=\" + this.state.zoneName + \"&section=Section1\")\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        this.setState({\r\n                            room: result.roomsName\r\n                        });\r\n                    },\r\n                    (error) => {\r\n                        console.error(error);\r\n                    }\r\n                )\r\n        }\r\n    }\r\n\r\n    toggle(cardToggleNo) {\r\n        if (cardToggleNo === this.state.activeCardNo)\r\n            this.setState({\r\n                activeCardNo: 0\r\n            })\r\n        else\r\n            this.setState({\r\n                activeCardNo: cardToggleNo\r\n            })\r\n    }\r\n\r\n    completeVideo(zoneIndex, sectionIndex) {\r\n        let lessonProgress = this.state.lessonProgress;\r\n        lessonProgress[zoneIndex].zoneProgress[sectionIndex].video = true;\r\n        this.updateLessonProgress(lessonProgress, false);\r\n        this.setState({\r\n            lessonProgress: lessonProgress\r\n        })\r\n    }\r\n\r\n    completeExercise(zoneIndex, sectionIndex, exerciseIndex, exerciseResponse, startTime) {\r\n        let lessonProgress = this.state.lessonProgress, activeCardNo = this.state.activeCardNo, updateRoom=false;\r\n        lessonProgress[zoneIndex].zoneProgress[sectionIndex].exercises[exerciseIndex].response = exerciseResponse;\r\n        lessonProgress[zoneIndex].zoneProgress[sectionIndex].exercises[exerciseIndex].startTime = startTime;\r\n        lessonProgress[zoneIndex].zoneProgress[sectionIndex].exercises[exerciseIndex].endTime = Math.round(new Date().getTime() / 1000);\r\n        lessonProgress[zoneIndex].zoneProgress[sectionIndex].exercises[exerciseIndex].status = true;\r\n        if (lessonProgress[zoneIndex].zoneProgress[sectionIndex].exercises.length === (exerciseIndex + 1)) {\r\n            lessonProgress[zoneIndex].zoneProgress[sectionIndex].status = true;\r\n            if (lessonProgress[zoneIndex].zoneProgress.length === (sectionIndex + 1))\r\n                lessonProgress[zoneIndex].status = true\r\n            else\r\n            updateRoom=true;\r\n        }\r\n        let exerciseData = {\r\n            \"roadmap\": \"foundation\",\r\n            \"zone\": lessonProgress[zoneIndex].zoneName,\r\n            \"sectionIndex\": sectionIndex,\r\n            \"exerciseIndex\": exerciseIndex,\r\n            \"timeTaken\": lessonProgress[zoneIndex].zoneProgress[sectionIndex].exercises[exerciseIndex].endTime - startTime,\r\n            \"startTime\": startTime\r\n        }\r\n        this.updateLessonProgress(lessonProgress, exerciseData);\r\n        if (this.state.sectionsJson[sectionIndex].exercises.length === (exerciseIndex + 1)) {\r\n            activeCardNo++;\r\n        }\r\n        this.setState({\r\n            lessonProgress: lessonProgress,\r\n            activeCardNo: activeCardNo\r\n        })\r\n        if(updateRoom)\r\n        this.getRoomNo();\r\n    }\r\n\r\n    updateLessonProgress(lessonProgress,exerciseUpdate) {\r\n        var lessonProgressDetails = JSON.stringify({\r\n            \"email\": this.props.email,\r\n            \"lessonProgress\": lessonProgress,\r\n            \"exerciseAnalytics\": exerciseUpdate\r\n        });\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: lessonProgressDetails,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(this.props.mainApis.updateLesson, requestOptions)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n                let result = JSON.parse(response);\r\n                if (result.status !== 200) {\r\n                    alert(\"Couldn't update progress to server\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert(\"Couldn't update progress to server\");\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, sectionsJson, lessonProgress, activeCardNo, room } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            let sectionsHtml = [], sectionPos = 0, zoneProgress, zoneIndex, moveToNextZone = [];\r\n            const { zonesJson, zoneName } = this.props;\r\n            if (!lessonProgress.find(zone => zone.zoneName === zoneName)) {\r\n                let newZoneJson = {\r\n                    \"zoneName\": zoneName,\r\n                    \"status\": false,\r\n                    \"zoneProgress\": []\r\n                }\r\n                for (let i = 0; i < sectionsJson.length; i++) {\r\n                    newZoneJson.zoneProgress.push({\r\n                        \"status\": false,\r\n                        \"video\": false,\r\n                        \"exercises\": []\r\n                    })\r\n                    for (let j = 0; j < sectionsJson[i].exercises.length; j++) {\r\n                        newZoneJson.zoneProgress[i].exercises.push({\r\n                            \"status\": false,\r\n                            \"startTime\": \"\",\r\n                            \"endTime\": \"\",\r\n                            \"response\": \"\"\r\n                        })\r\n\r\n                    }\r\n                }\r\n                lessonProgress.push(newZoneJson);\r\n                this.setState({\r\n                    lessonProgress: lessonProgress\r\n                })\r\n            }\r\n            zoneProgress = lessonProgress.find(zone => zone.zoneName === zoneName).zoneProgress;\r\n            zoneIndex = lessonProgress.findIndex(zone => zone.zoneName === zoneName);\r\n            if (lessonProgress.find(zone => zone.zoneName === zoneName).status && zonesJson.length !== (zoneIndex + 1)) {\r\n                moveToNextZone.push(\r\n                    <Card\r\n                        body\r\n                        className=\"text-center\"\r\n                    >\r\n                        <CardTitle tag=\"h5\">\r\n                            Zone Completed\r\n                        </CardTitle>\r\n                        <CardText>\r\n                            Congratulations on completing this zone, you can move to next zone by clicking on the button below.\r\n                        </CardText>\r\n                        <Link to={`/zone/${zonesJson[zoneIndex + 1].name}`}>\r\n                            <Button color=\"primary\">Go to Next Zone</Button>\r\n                        </Link>\r\n                    </Card>\r\n                )\r\n            }\r\n            while (sectionPos < sectionsJson.length && zoneProgress[sectionPos].status === true) {\r\n                let toggleValue = sectionPos + 1;\r\n                sectionsHtml.push(\r\n                    <AccordionItem>\r\n                        <AccordionHeader targetId={toggleValue}>\r\n                            {sectionsJson[sectionPos].desc}\r\n                        </AccordionHeader>\r\n                        <AccordionBody accordionId={toggleValue}>\r\n                            <ZoneSection completeVideo={() => this.completeVideo(zoneIndex, toggleValue - 1)} sendExerciseResponse={(exerciseIndex, exerciseResponse, startTime) => this.completeExercise(zoneIndex, toggleValue - 1, exerciseIndex, exerciseResponse, startTime)} sectionProgress={zoneProgress[sectionPos]} sectionData={sectionsJson[sectionPos]} />\r\n                        </AccordionBody>\r\n                    </AccordionItem>\r\n                );\r\n                sectionPos++;\r\n            }\r\n            if (sectionPos < sectionsJson.length) {\r\n                let toggleValue = sectionPos + 1, roomInfo = [];\r\n                if (activeCardNo === toggleValue)\r\n                    roomInfo.push(\r\n                        <Badge color=\"primary\">{room}</Badge>\r\n                    )\r\n                sectionsHtml.push(\r\n                    <AccordionItem>\r\n                        <AccordionHeader targetId={toggleValue}>\r\n                            {sectionsJson[sectionPos].desc}\r\n                            {roomInfo}\r\n                        </AccordionHeader>\r\n                        <AccordionBody accordionId={toggleValue}>\r\n                            <ZoneSection completeVideo={() => this.completeVideo(zoneIndex, toggleValue - 1)} sendExerciseResponse={(exerciseIndex, exerciseResponse, startTime) => this.completeExercise(zoneIndex, toggleValue - 1, exerciseIndex, exerciseResponse, startTime)} sectionProgress={zoneProgress[sectionPos]} sectionData={sectionsJson[sectionPos]} />\r\n                        </AccordionBody>\r\n                    </AccordionItem>\r\n                );\r\n                sectionPos++;\r\n            }\r\n            while (sectionPos < sectionsJson.length) {\r\n                let toggleValue = sectionPos + 1;\r\n                sectionsHtml.push(\r\n                    <AccordionItem>\r\n                        <AccordionHeader targetId={toggleValue}>\r\n                            {sectionsJson[sectionPos].desc}\r\n                        </AccordionHeader>\r\n                        <AccordionBody>\r\n                            <ZoneSection completeVideo={() => this.completeVideo(zoneIndex, toggleValue - 1)} sectionProgress={zoneProgress[sectionPos]} sectionData={sectionsJson[sectionPos]} />\r\n                        </AccordionBody>\r\n                    </AccordionItem>\r\n                );\r\n                sectionPos++;\r\n            }\r\n            return (\r\n                <div key={this.props.zoneName} className=\"sections\">\r\n                    <Link to={`/home`}><Button color=\"primary\">Back to Home</Button></Link>\r\n                    <Accordion open={this.state.activeCardNo} toggle={this.toggle}>\r\n                        {sectionsHtml}\r\n                    </Accordion>\r\n                    {moveToNextZone}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ZoneRoute;","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './start-page.css';\r\n\r\nclass StartPage extends Component {\r\n    render() {\r\n        return (<div id='start_page'>\r\n            <div id='loginOptions'>\r\n                <Link to={`/signup`}><Button color=\"primary\" className='loginButtons'>Sign Up</Button></Link>\r\n                <div id='or'>OR</div>\r\n                <Link to={`/login`}><Button color=\"primary\" className='loginButtons'>Login</Button></Link>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default StartPage;","import React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\n\r\nconst NavigateToStartPage = ({nav}) => {\r\n    const navigate = useNavigate();\r\n\r\n    if(nav)\r\n    navigate('/startpage');\r\n\r\n    return (\r\n        <></>\r\n    );\r\n}\r\n\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emails: [],\r\n            navigate: false\r\n        }\r\n        this.signUpAccount = this.signUpAccount.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(this.props.signUpApis.getEmails)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        emails: result\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    signUpAccount(event) {\r\n        event.preventDefault();\r\n        if (this.state.emails.find(email => email === this.email.value)) {\r\n            alert(\"Account with this email altready exists\");\r\n            return;\r\n        }\r\n        if (this.password.value !== this.confirmPassword.value) {\r\n            alert(\"Passwords didn't match\");\r\n            return;\r\n        }\r\n        var newUserData = JSON.stringify({\r\n            \"emailId\": this.email.value,\r\n            \"name\": this.name.value,\r\n            \"password\": this.password.value\r\n        });\r\n        this.sendSignUpToServerAndReportToUser(newUserData);\r\n    }\r\n    sendSignUpToServerAndReportToUser(dataToSend) {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: dataToSend,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(this.props.signUpApis.createUser, requestOptions)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n                let result = JSON.parse(response);\r\n                if (result.statusCode === 200) {\r\n                    alert(result.body);\r\n                    this.setState({\r\n                        navigate: true\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert(\"Account Creation Failed\");\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.signUpAccount}>\r\n                <FormGroup>\r\n                    <Label for=\"email\">\r\n                        Email\r\n                    </Label>\r\n                    <Input\r\n                        id=\"signupEmail\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter your email ID\"\r\n                        type=\"email\"\r\n                        innerRef={(input) => this.email = input}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"name\">\r\n                        Name\r\n                    </Label>\r\n                    <Input\r\n                        id=\"signupName\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter your Name\"\r\n                        type=\"text\"\r\n                        innerRef={(input) => this.name = input}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"password\">\r\n                        Password\r\n                    </Label>\r\n                    <Input\r\n                        id=\"signupPassword\"\r\n                        name=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        type=\"password\"\r\n                        innerRef={(input) => this.password = input}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"confirmPassword\">\r\n                        Confirm Password\r\n                    </Label>\r\n                    <Input\r\n                        id=\"signupConfirmPassword\"\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"Re-Enter your password\"\r\n                        type=\"password\"\r\n                        innerRef={(input) => this.confirmPassword = input}\r\n                    />\r\n                </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <NavigateToStartPage nav={this.state.navigate} />\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\n\r\nconst NavigateToHome = ({ nav }) => {\r\n    const navigate = useNavigate();\r\n\r\n    if (nav)\r\n        navigate('/home');\r\n\r\n    return (\r\n        <></>\r\n    );\r\n}\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navigate: false\r\n        }\r\n        this.login = this.login.bind(this);\r\n    }\r\n    login(event) {\r\n        event.preventDefault();\r\n        fetch(`${this.props.loginApis.loginUser}?email=${this.email.value}&password=${this.password.value}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result.authorized) {\r\n                        this.props.getLessonProgressEmailAndUserName(result.lessonProgress, this.email.value, result.name);\r\n                        this.setState({\r\n                            navigate: true\r\n                        })\r\n                    }\r\n                    else\r\n                    alert(\"Incorrect email or password\");\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.login}>\r\n                <FormGroup>\r\n                    <Label for=\"email\">\r\n                        Email\r\n                    </Label>\r\n                    <Input\r\n                        id=\"loginEmail\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter your email ID\"\r\n                        type=\"email\"\r\n                        innerRef={(input) => this.email = input}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"password\">\r\n                        Password\r\n                    </Label>\r\n                    <Input\r\n                        id=\"loginPassword\"\r\n                        name=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        type=\"password\"\r\n                        innerRef={(input) => this.password = input}\r\n                    />\r\n                </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <NavigateToHome nav={this.state.navigate} />\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Spinner } from 'reactstrap';\r\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n\r\nimport Header from './components/header/header';\r\nimport Main from './components/main/main';\r\nimport ZoneRoute from './components/zone-content/zone-content'\r\nimport StartPage from './components/start-page/start-page';\r\nimport SignUp from './components/signup/signup';\r\nimport Login from './components/login/login';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      baseFile: false,\r\n      lessonProgress: false,\r\n      zonesJson:[],\r\n      email:\"\",\r\n      userName: false\r\n    }\r\n    this.getLessonProgressEmailAndUserName = this.getLessonProgressEmailAndUserName.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch(process.env.PUBLIC_URL + \"/data/index.json\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            baseFile: result\r\n          });\r\n        }\r\n      )\r\n      fetch(process.env.PUBLIC_URL + \"/data/roadmap_foundation.json\")\r\n      .then(res => res.json())\r\n      .then(\r\n          (result) => {\r\n              this.setState({\r\n                  zonesJson: result.zones\r\n              });\r\n          }\r\n      )\r\n  }\r\n  getLessonProgressEmailAndUserName(lessonProgress, email, userName) {\r\n    this.setState({\r\n      lessonProgress: lessonProgress,\r\n      email: email,\r\n      userName: userName\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.setState({\r\n      userName: false\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.baseFile)\r\n    return (\r\n          <div className=\"App\">\r\n            <Router>\r\n              <Header userName={this.state.userName} email={this.state.email} logoutApi={this.state.baseFile.apis.login.logout} logout={this.logout} />\r\n              <Routes>\r\n                <Route exact path=\"/\" element={<Navigate to=\"/startpage\" />} />\r\n                <Route exact path=\"/startpage\" element={<StartPage />} />\r\n                <Route exact path=\"/signup\" element={<SignUp signUpApis={this.state.baseFile.apis.signUp} />} />\r\n                <Route exact path=\"/login\" element={<Login loginApis={this.state.baseFile.apis.login} getLessonProgressEmailAndUserName={this.getLessonProgressEmailAndUserName} />} />\r\n                <Route exact path=\"/home\" element={<Main lessonProgress={this.state.lessonProgress} zonesJson={this.state.zonesJson} />} />\r\n                <Route exact path=\"/zone/:zoneName\" element={<ZoneRoute lessonProgress={this.state.lessonProgress} mainApis={this.state.baseFile.apis.main} roomManagementApis={this.state.baseFile.apis.roomManagement} email={this.state.email} zonesJson={this.state.zonesJson} />} />\r\n              </Routes>\r\n            </Router>\r\n          </div>\r\n        );\r\n      else\r\n        return (\r\n          <div className=\"App\">\r\n            <Header />\r\n            <div id=\"loadingApp\">\r\n              <Spinner id='appSpinner'>\r\n                Loading...\r\n              </Spinner>\r\n            </div>\r\n          </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}