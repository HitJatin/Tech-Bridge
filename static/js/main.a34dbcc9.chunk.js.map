{"version":3,"sources":["components/header/header.js","components/main/zone/zone.js","components/main/main.js","components/zone-content/zone-section/zone-section-content/zone-section-content.js","components/zone-content/zone-section/sections-nav/sections-nav.js","components/zone-content/zone-section/zone-section.js","components/zone-content/zone-content.js","components/signup/signup.js","components/login/login.js","components/start-page/start-page.js","components/home/home.js","components/facilitator/facilitator.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","navMenuOpen","navigate","logoutModal","toggle","bind","logout","closeModal","this","setState","logoutData","JSON","stringify","email","myHeaders","Headers","append","requestOptions","method","headers","body","redirect","fetch","logoutApi","then","response","text","catch","error","console","userToggle","userName","push","isOpen","caret","onClick","id","color","href","process","dark","fixed","Component","Zone","button","zoneData","status","profile","roadmap","pathName","disabled","to","name","className","desc","Main","viewZoneIndex","zoneAnimating","path","isLoaded","pathProgress","setViewZoneIndex","setZoneAnimating","previousButton","nextButton","roadmaps","lessonProgress","find","profileCode","roadmapProgress","paths","code","progress","zoneIndex","length","res","json","result","index","animating","previousZoneIndex","zones","nextZoneIndex","message","zonesJson","zonesHtml","i","resumeZone","onExited","onExiting","activeIndex","next","previous","interval","items","onClickHandler","newIndex","direction","directionText","dangerouslySetInnerHTML","__html","introduction","content","controls","src","video","type","MainRoute","params","useParams","ZoneSectionContent","exerciseInput","improveAnswer","submitExercise","setExerciseView","prevProps","log","sectionProgress","activeExercise","n","exercises","trim","alert","sectionData","completeVideoButtton","exerciseData","completeVideo","width","placeholder","value","toggleHelpWindow","onChange","e","target","SectionNav","changeExercise","exerciseIndexEvent","exerciseIndex","currentNextExercise","isActiveSection","currentExercise","isExerciseComplete","nextExercise","menuItems","Button","variant","MenuItem","Select","disableUnderline","totalExercises","ExerciseButton","ZoneSection","startTime","help","contactFacilitator","activeHelpTab","helpTabsClasses","solutions","helpWindowActiveProblem","askedProblem","problemDesc","facilitatorRoom","toggleContactFacilitator","changeHelpActiveTab","openVideo","openExercise","changeHelpWindowActiveProblem","sendProblem","submitProblem","getCurrentContent","getExerciseSolutions","helpApis","sectionsLocation","sectionIndex","zoneName","getSolutions","openId","Math","round","Date","getTime","tabNo","problemIndex","dataToSend","room","exerciseNav","exercisesIndex","toggleIndex","activeClass","tempExercise","hintsUI","hintNav","hints","solutionsListUI","targetId","problem","accordionId","solution","askProblemUI","tabs","activeTab","tabId","open","ZoneContent","fetchSectionsJson","a","fetchResponse","data","sectionsJson","activeSectionIndex","sectionsLocationIndex","checkAndAddNewUserProgress","sections","getRoomNo","currProfile","newProfile","profileIndex","findIndex","currRoadmap","newRoadmap","roadmapIndex","currPath","newPath","pathIndex","currZone","newZone","newZoneJson","j","zone","zoneProgress","roomManagementApis","roomsName","cardToggleNo","updateLessonProgress","updateLessonProgressOnExerciseAndUpdateRoomIfRequired","endTime","exerciseUpdate","lessonProgressDetails","mainApis","updateLesson","parse","sectionsHtml","sectionPos","toggleValue","roomInfo","ZoneRoute","SignUp","emails","signUpAccount","signUpApis","getEmails","event","preventDefault","checkEmptyValues","password","confirmPassword","newUserData","sendSignUpToServerAndReportToUser","createUser","statusCode","onSubmit","innerRef","input","NavigateToHome","nav","role","useNavigate","Login","login","loginApis","loginUser","authorized","getLessonProgressEmailAndUserName","StepTile","alt","imgSrc","top","tag","title","FeatureTile","img","float","infoClass","StartPage","steps","placement","features","map","step","feature","class","Profile","profileProgress","segmentsGroup","rightArrow","file","inConstruction","Home","profiles","roadmapsHtml","lesson","AntSwitch","styled","Switch","theme","height","padding","display","transform","opacity","backgroundColor","palette","mode","boxShadow","borderRadius","transition","transitions","create","duration","boxSizing","Facilitator","problemsList","solutionsList","solvedProblemsList","activeProblem","exerciseDesc","documentSolutions","updateActiveProblem","toggleMode","facilitatorApis","getProblemList","filter","exerciseLocation","roadmapName","pathCode","problemListUI","active","checked","App","baseFile","apis","exact","element","signUp","facilitator","main","roomManagement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a34dbcc9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Navbar, NavbarBrand, NavbarText, Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navMenuOpen: false,\r\n            navigate: false,\r\n            logoutModal: false\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n    toggle() {\r\n        this.setState({\r\n            navMenuOpen: !this.state.navMenuOpen\r\n        });\r\n    }\r\n    logout() {\r\n        let logoutData = JSON.stringify({\r\n            \"email\": this.props.email\r\n        });\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: logoutData,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(this.props.logoutApi, requestOptions)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n                this.props.logout();\r\n                this.setState({\r\n                    logoutModal: true\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            });\r\n    }\r\n    closeModal() {\r\n        this.setState({\r\n            logoutModal: false\r\n        })\r\n    }\r\n    render() {\r\n        let userToggle = [];\r\n        if (this.props.userName) {\r\n            userToggle.push(\r\n                <NavbarText>\r\n                    <Dropdown toggle={this.toggle} isOpen={this.state.navMenuOpen}>\r\n                        <DropdownToggle caret>\r\n                            {this.props.userName}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            <DropdownItem onClick={this.logout}>Logout</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </NavbarText>\r\n            )\r\n        }\r\n        return (\r\n            <div id=\"navbar\">\r\n                <Modal\r\n                    isOpen={this.state.logoutModal}\r\n                >\r\n                    <ModalHeader>Successfully Logged Out</ModalHeader>\r\n                    <ModalBody>\r\n                        You can go to start page to login again\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" href={process.env.PUBLIC_URL} onClick={this.closeModal}>Start Page</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Navbar\r\n                    color=\"dark\"\r\n                    dark\r\n                    fixed=\"top\"\r\n                >\r\n                    <NavbarBrand href={process.env.PUBLIC_URL}>\r\n                        Tech-Bridge\r\n                    </NavbarBrand>\r\n                    {userToggle}\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Zone extends Component {\r\n    render() {\r\n        const { zoneData, status, profile, roadmap, pathName } = this.props;\r\n        let button;\r\n        if (status === \"locked\")\r\n            button = <Button color=\"danger\" disabled>Locked</Button>;\r\n        if (status === \"completed\")\r\n            button = <Link to={`/${profile}/${roadmap}/${pathName}/${zoneData.name}`}><Button color=\"success\">Completed</Button></Link>;\r\n        if (status === \"start\")\r\n            button = <Link to={`/${profile}/${roadmap}/${pathName}/${zoneData.name}`}><Button color=\"primary\">Start</Button></Link>;\r\n        if (status === \"inprogress\")\r\n            button = <Link to={`/${profile}/${roadmap}/${pathName}/${zoneData.name}`}><Button color=\"warning\">Resume</Button></Link>;\r\n        return (<div>\r\n            <div className=\"zoneHead\">\r\n                <div className=\"emptySpace\"></div>\r\n                <div className=\"zoneTitle\">{zoneData.name}</div>\r\n                <div className=\"zoneButton\">{button}</div>\r\n            </div>\r\n            <div className=\"zoneContent\">{zoneData.desc}</div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Zone;","import React, { Component } from \"react\";\r\nimport \"./main.css\";\r\nimport { Carousel, CarouselControl, CarouselIndicators, CarouselItem } from \"reactstrap\";\r\nimport Zone from \"./zone/zone\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst MainRoute = (props) => {\r\n    const params = useParams();\r\n    const profile = params.profile, roadmap = params.roadmap, pathName = params.pathName;\r\n\r\n    return (<Main lessonProgress={props.lessonProgress} profile={profile} roadmap={roadmap} pathName={pathName} />);\r\n}\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewZoneIndex: 0,\r\n            zoneAnimating: false,\r\n            path: [],\r\n            isLoaded: false,\r\n            error: false,\r\n            pathProgress: []\r\n        }\r\n        this.setViewZoneIndex = this.setViewZoneIndex.bind(this);\r\n        this.setZoneAnimating = this.setZoneAnimating.bind(this);\r\n        this.previousButton = this.previousButton.bind(this);\r\n        this.nextButton = this.nextButton.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const roadmaps = this.props.lessonProgress.find(profile => profile.profileCode === this.props.profile)?.roadmaps;\r\n        const roadmapProgress = roadmaps?.find(roadmap => roadmap.name === this.props.roadmap)?.paths;\r\n        const pathProgress = roadmapProgress?.find(path => path.code === this.props.pathName)?.progress;\r\n        if (pathProgress) {\r\n            let zoneIndex = pathProgress.length;\r\n            if (!pathProgress[zoneIndex - 1].status)\r\n                zoneIndex--;\r\n            this.setState({\r\n                viewZoneIndex: zoneIndex,\r\n                pathProgress: pathProgress\r\n            })\r\n        }\r\n        fetch(`${process.env.PUBLIC_URL}/data/profiles/${this.props.profile}/${this.props.roadmap}/${this.props.pathName}.json`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        path: result,\r\n                        isLoaded: true\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    setViewZoneIndex(index) {\r\n        this.setState({\r\n            viewZoneIndex: index\r\n        })\r\n    }\r\n\r\n    setZoneAnimating(animating) {\r\n        this.setState({\r\n            zoneAnimating: animating\r\n        })\r\n    }\r\n\r\n    previousButton() {\r\n        if (this.state.zoneAnimating) return;\r\n        const previousZoneIndex = this.state.viewZoneIndex === 0 ? this.state.path.zones.length - 1 : this.state.viewZoneIndex - 1;\r\n        this.setViewZoneIndex(previousZoneIndex);\r\n    }\r\n\r\n    nextButton() {\r\n        if (this.state.zoneAnimating) return;\r\n        const nextZoneIndex = this.state.viewZoneIndex === this.state.path.zones.length - 1 ? 0 : this.state.viewZoneIndex + 1;\r\n        this.setViewZoneIndex(nextZoneIndex);\r\n    }\r\n\r\n    render() {\r\n        const { profile, roadmap, pathName } = this.props;\r\n        const { error, isLoaded, viewZoneIndex, zoneAnimating, path, pathProgress } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            let zonesJson = path.zones, zonesHtml = [];\r\n            for (let i = 0; i < zonesJson.length; i++) {\r\n                let status, resumeZone=false;\r\n                if(pathProgress.length!==0){\r\n                    if(!pathProgress[pathProgress.length-1].status)\r\n                    resumeZone=true;\r\n                }\r\n                if(i<pathProgress.length-1 || (i<pathProgress.length && !resumeZone))\r\n                status=\"completed\";\r\n                else if(i<pathProgress.length && resumeZone)\r\n                status=\"inprogress\";\r\n                else if(i===pathProgress.length && !resumeZone)\r\n                status=\"start\";\r\n                else\r\n                status=\"locked\";\r\n                zonesHtml.push(<CarouselItem\r\n                    className=\"zone\"\r\n                    onExited={() => this.setZoneAnimating(false)}\r\n                    onExiting={() => this.setZoneAnimating(true)}\r\n                >\r\n                    <Zone profile={profile} roadmap={roadmap} pathName={pathName} zoneData={zonesJson[i]} status={status} />\r\n                </CarouselItem>)\r\n            }\r\n            return (<div id=\"home\">\r\n                <div className=\"zones\">\r\n                    <Carousel\r\n                        activeIndex={viewZoneIndex}\r\n                        next={this.nextButton}\r\n                        previous={this.previousButton}\r\n                        interval={false}\r\n                    >\r\n                        <CarouselIndicators\r\n                            activeIndex={viewZoneIndex}\r\n                            items={zonesJson}\r\n                            onClickHandler={(newIndex) => {\r\n                                if (zoneAnimating) return;\r\n                                this.setViewZoneIndex(newIndex);\r\n                            }}\r\n                        />\r\n                        {zonesHtml}\r\n                        <CarouselControl\r\n                            direction=\"prev\"\r\n                            directionText=\"Previous\"\r\n                            onClickHandler={this.previousButton}\r\n                        />\r\n                        <CarouselControl\r\n                            direction=\"next\"\r\n                            directionText=\"Next\"\r\n                            onClickHandler={this.nextButton}\r\n                        />\r\n                    </Carousel>\r\n                </div>\r\n                <div id=\"segmentInfo\">\r\n                    <div id=\"infoText\" dangerouslySetInnerHTML={{ __html: path.introduction.content }}></div>\r\n                    <video id=\"infoVideo\" controls>\r\n                        <source src={path.introduction.video} type=\"video/mp4\" />\r\n                        Your browser doesn't support HTML video\r\n                    </video>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default MainRoute;","import { Component } from \"react\";\r\nimport { Button, Input } from \"reactstrap\";\r\n\r\nexport default class ZoneSectionContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            exerciseInput: \"\",\r\n            improveAnswer: false\r\n        }\r\n        this.submitExercise = this.submitExercise.bind(this);\r\n        this.improveAnswer = this.improveAnswer.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.setExerciseView();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            this.setExerciseView();\r\n            console.log(\"view updated\");\r\n        }\r\n    }\r\n\r\n    setExerciseView() {\r\n        const { sectionProgress, type, activeExercise } = this.props;\r\n        let n = sectionProgress.exercises[activeExercise - 1]?.response.length;\r\n        if (activeExercise !== 0 && n !== 0) {\r\n            console.log(\"called\");\r\n            this.setState({\r\n                exerciseInput: sectionProgress.exercises[activeExercise - 1]?.response[n - 1],\r\n                improveAnswer: true\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                exerciseInput: '',\r\n                improveAnswer: false\r\n            })\r\n        }\r\n    }\r\n\r\n    submitExercise() {\r\n        const { exerciseInput } = this.state;\r\n        if (exerciseInput.trim() === \"\")\r\n            alert(\"Enter exercise response\");\r\n        else\r\n            this.props.submitExercise(exerciseInput);\r\n    }\r\n\r\n    improveAnswer() {\r\n        this.setState({\r\n            improveAnswer: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { type, sectionProgress, sectionData, activeExercise } = this.props;\r\n        const { improveAnswer } = this.state;\r\n        const completeVideoButtton = [], exerciseData = sectionData.exercises;\r\n        if (!sectionProgress.video)\r\n            completeVideoButtton.push(<Button color=\"primary\" onClick={this.props.completeVideo}>Mark Video as complete</Button>)\r\n        if (activeExercise == 0)\r\n            return (<div className=\"videoView\">\r\n                <video width=\"600\" controls>\r\n                    <source src={sectionData.video} type=\"video/mp4\" />\r\n                    Your browser doesn't support HTML video\r\n                </video>\r\n                <div>{completeVideoButtton}</div>\r\n            </div>)\r\n        else {\r\n            if (improveAnswer)\r\n                return (<div className=\"exerciseContent\">\r\n                    <div className=\"exerciseDesc\" dangerouslySetInnerHTML={{ __html: exerciseData[activeExercise - 1]?.desc }}></div>\r\n                    <div className=\"exerciseResp\">\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            placeholder=\"Enter your response\"\r\n                            value={this.state.exerciseInput}\r\n                            disabled\r\n                        />\r\n                        <Button className=\"exerciseButtons\" color=\"primary\" onClick={this.improveAnswer} >Improve Answer</Button>\r\n                        <Button className=\"exerciseButtons\" color=\"primary\" onClick={this.props.toggleHelpWindow}>Ask for help</Button>\r\n                    </div>\r\n                </div>)\r\n            else\r\n                return (<div className=\"exerciseContent\">\r\n                    <div className=\"exerciseDesc\" dangerouslySetInnerHTML={{ __html: exerciseData[activeExercise - 1]?.desc }}></div>\r\n                    <div className=\"exerciseResp\">\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            placeholder=\"Enter your response\"\r\n                            value={this.state.exerciseInput}\r\n                            onChange={(e) => {\r\n                                this.setState({\r\n                                    exerciseInput: e.target.value\r\n                                });\r\n                            }}\r\n                        />\r\n                        <Button className=\"exerciseButtons\" color=\"primary\" onClick={this.submitExercise} >Submit</Button>\r\n                        <Button className=\"exerciseButtons\" color=\"primary\" onClick={this.props.toggleHelpWindow}>Ask for help</Button>\r\n                    </div>\r\n                </div>)\r\n        }\r\n    }\r\n}","import { Component } from \"react\";\r\nimport \"./sections-nav.css\"\r\nimport AutoStoriesIcon from '@mui/icons-material/AutoStories';\r\nimport Button from '@mui/material/Button';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nexport default class SectionNav extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.changeExercise = this.changeExercise.bind(this);\r\n    }\r\n    changeExercise(exerciseIndexEvent){\r\n        let exerciseIndex = exerciseIndexEvent.target.value;\r\n        this.props.changeExercise(exerciseIndex);\r\n    }\r\n    render() {\r\n        const { isActiveSection, currentExercise, activeExercise, isExerciseComplete, nextExercise, changeExercise } = this.props;\r\n        let menuItems = [], currentNextExercise;\r\n\r\n        if (isActiveSection) {\r\n            if (currentExercise === activeExercise){\r\n                if(isExerciseComplete)\r\n                currentNextExercise = <Button className=\"currentNextExercise\" variant=\"contained\" onClick={nextExercise}>Start Next Exercise</Button>;\r\n                else\r\n                currentNextExercise = <Button className=\"currentNextExercise\" variant=\"contained\" disabled>Current Exercise</Button>;\r\n            }\r\n            else\r\n                currentNextExercise = <Button className=\"currentNextExercise\" variant=\"contained\" onClick={() => changeExercise(currentExercise)}>Current Exercise</Button>;\r\n\r\n        }\r\n        else {\r\n            currentNextExercise = <Button className=\"currentNextExercise\" variant=\"contained\" disabled>Current Exercise</Button>;\r\n        }\r\n        menuItems.push(<MenuItem value={0}>0</MenuItem>)\r\n        for (let i = 0; i < currentExercise; i++) {\r\n            menuItems.push(<MenuItem value={i + 1}>{i + 1}</MenuItem>)\r\n        }\r\n        return (<div className=\"sectionsNav\">\r\n            <Button className=\"viewLesson\" variant=\"contained\">Lesson <AutoStoriesIcon className=\"iconCsss\" /></Button>\r\n            <div className=\"emptySpace\"></div>\r\n            <div className=\"exerciseInfo\">\r\n                <div className=\"exerciseInfo1st\">Exercise</div>\r\n                <Select\r\n                    className=\"exerciseInfo2nd\"\r\n                    value={this.props.activeExercise}\r\n                    onChange={this.changeExercise}\r\n                    variant=\"standard\"\r\n                    disableUnderline\r\n                >\r\n                    {menuItems}\r\n                </Select>\r\n                <div className=\"exerciseInfo3rd\">of {this.props.totalExercises}</div>\r\n            </div>\r\n            {currentNextExercise}\r\n        </div>)\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport { Accordion, AccordionBody, AccordionHeader, AccordionItem, Button, Card, CardBody, CardHeader, CardText, CardTitle, Col, Collapse, Container, Input, InputGroup, Modal, ModalBody, ModalHeader, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\r\nimport { BsPlayCircle } from \"react-icons/bs\";\r\n\r\nimport ZoneSectionContent from \"./zone-section-content/zone-section-content\";\r\nimport SectionNav from \"./sections-nav/sections-nav\";\r\n\r\nclass VideoButton extends Component {\r\n    render() {\r\n        if (this.props.status)\r\n            return (<Button color=\"success\" onClick={this.props.onClick}>Lesson<BsPlayCircle id=\"videoIcon\" /></Button>);\r\n        else\r\n            return (<Button color=\"primary\" onClick={this.props.onClick}>Lesson<BsPlayCircle id=\"videoIcon\" /></Button>)\r\n    }\r\n}\r\n\r\nclass ExerciseButton extends Component {\r\n    render() {\r\n        if (this.props.status === \"completed\")\r\n            return (<Button color=\"success\" onClick={this.props.onClick}>{this.props.name}</Button>);\r\n        else if (this.props.status === \"start\")\r\n            return (<Button color=\"primary\" onClick={this.props.onClick}>{this.props.name}</Button>);\r\n        else if (this.props.status === \"locked\")\r\n            return (<Button color=\"danger\" onClick={this.props.onClick} disabled>{this.props.name}</Button>);\r\n        else\r\n            return (<></>);\r\n    }\r\n}\r\n\r\nclass ZoneSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startTime: false,\r\n            help: false,\r\n            contactFacilitator: false,\r\n            activeHelpTab: \"1\",\r\n            helpTabsClasses: ['active', ''],\r\n            type: \"\",\r\n            solutions: [],\r\n            helpWindowActiveProblem: 0,\r\n            askedProblem: false,\r\n            problemDesc: \"\",\r\n            facilitatorRoom: \"\",\r\n            activeExercise: 0,\r\n            currentExercise: 0,\r\n            isExerciseComplete: false,\r\n            isActiveSection: false\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleHelpWindow = this.toggleHelpWindow.bind(this);\r\n        this.toggleContactFacilitator = this.toggleContactFacilitator.bind(this);\r\n        this.changeHelpActiveTab = this.changeHelpActiveTab.bind(this);\r\n        this.openVideo = this.openVideo.bind(this);\r\n        this.openExercise = this.openExercise.bind(this);\r\n        this.submitExercise = this.submitExercise.bind(this);\r\n        this.changeHelpWindowActiveProblem = this.changeHelpWindowActiveProblem.bind(this);\r\n        this.contactFacilitator = this.contactFacilitator.bind(this);\r\n        this.sendProblem = this.sendProblem.bind(this);\r\n        this.submitProblem = this.submitProblem.bind(this);\r\n        this.changeExercise = this.changeExercise.bind(this);\r\n        this.nextExercise = this.nextExercise.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrentContent();\r\n        this.getExerciseSolutions();\r\n    }\r\n\r\n    getCurrentContent() {\r\n        let { sectionProgress } = this.props;\r\n        if (sectionProgress.status) {\r\n            this.setState({\r\n                activeExercise: 0,\r\n                currentExercise: 0,\r\n                isActiveSection: false\r\n            })\r\n        }\r\n        else {\r\n            if (sectionProgress.video) {\r\n                let currentExercise = 0;\r\n                for (currentExercise = 0; currentExercise < sectionProgress.exercises.length; currentExercise++) {\r\n                    if (!sectionProgress.exercises[currentExercise].status)\r\n                        break;\r\n                }\r\n                this.setState({\r\n                    activeExercise: currentExercise,\r\n                    currentExercise: currentExercise,\r\n                    isExerciseComplete: true,\r\n                    isActiveSection: true\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    activeExercise: 0,\r\n                    currentExercise: 0,\r\n                    isExerciseComplete: false,\r\n                    isActiveSection: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            this.getCurrentContent();\r\n        }\r\n    }\r\n\r\n    getExerciseSolutions() {\r\n        const { helpApis, sectionsLocation, sectionIndex } = this.props;\r\n        const { activeExercise } = this.state;\r\n        const { profile, roadmap, pathName, zoneName } = sectionsLocation;\r\n        fetch(`${helpApis.getSolutions}?profile=${profile}&roadmap=${roadmap}&path=${pathName}&zone=${zoneName}&section=${sectionIndex}&exercise=${activeExercise}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        solutions: result\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    openVideo() {\r\n        this.setState({\r\n            type: \"video\"\r\n        });\r\n    }\r\n\r\n    openExercise(activeExercise) {\r\n        this.setState({\r\n            type: \"exercise\",\r\n            activeExercise: activeExercise\r\n        })\r\n    }\r\n\r\n    toggle(openId) {\r\n        if (this.state.openId === openId)\r\n            this.setState({\r\n                openId: 0\r\n            });\r\n        else\r\n            this.setState({\r\n                openId: openId,\r\n                startTime: Math.round(new Date().getTime() / 1000)\r\n            });\r\n    }\r\n\r\n    submitExercise(exerciseInput) {\r\n        const { startTime, activeExercise } = this.state;\r\n        this.props.submitExercise(exerciseInput, startTime, activeExercise);\r\n    }\r\n\r\n    toggleHelpWindow() {\r\n        this.setState({\r\n            help: !this.state.help\r\n        });\r\n    }\r\n\r\n    toggleContactFacilitator() {\r\n        this.setState({\r\n            contactFacilitator: !this.state.contactFacilitator\r\n        });\r\n    }\r\n\r\n    changeHelpActiveTab(tabNo) {\r\n        let helpTabsClasses = ['', '', ''];\r\n        helpTabsClasses[tabNo - 1] = 'active';\r\n        this.setState({\r\n            activeHelpTab: tabNo + \"\",\r\n            helpTabsClasses: helpTabsClasses\r\n        })\r\n    }\r\n\r\n    changeHelpWindowActiveProblem(problemIndex) {\r\n        if (problemIndex === this.state.helpWindowActiveProblem)\r\n            this.setState({\r\n                helpWindowActiveProblem: 0\r\n            })\r\n        else\r\n            this.setState({\r\n                helpWindowActiveProblem: problemIndex\r\n            })\r\n    }\r\n\r\n    contactFacilitator() {\r\n        this.setState({\r\n            help: false,\r\n            contactFacilitator: true\r\n        })\r\n    }\r\n\r\n    submitProblem() {\r\n        let problemDesc = JSON.stringify({\r\n            \"problem\": this.state.problemDesc,\r\n            \"email\": this.props.email,\r\n            \"userName\": this.props.userName,\r\n            \"exerciseLocation\": {\r\n                \"profile\": this.props.sectionsLocation.profile,\r\n                \"roadmap\": this.props.sectionsLocation.roadmap,\r\n                \"path\": this.props.sectionsLocation.pathName,\r\n                \"zone\": this.props.sectionsLocation.zoneName,\r\n                \"section\": this.props.sectionIndex,\r\n                \"exercise\": this.state.activeExercise\r\n            }\r\n        });\r\n        this.sendProblem(problemDesc);\r\n    }\r\n\r\n    sendProblem(dataToSend) {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: dataToSend,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(this.props.helpApis.getSolutions, requestOptions)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    facilitatorRoom: response.room,\r\n                    askedProblem: true\r\n                })\r\n            })\r\n            .catch(error => {\r\n                alert(\"Some error occured, Please try again later\");\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n    changeExercise(exerciseIndex) {\r\n        this.setState({\r\n            activeExercise: exerciseIndex\r\n        })\r\n    }\r\n\r\n    nextExercise() {\r\n        this.setState({\r\n            startTime: Math.round(new Date().getTime() / 1000),\r\n            isExerciseComplete: false,\r\n            currentExercise: this.state.currentExercise + 1,\r\n            activeExercise: this.state.activeExercise + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { sectionData, sectionProgress } = this.props;\r\n        const { type, activeExercise, solutions, helpWindowActiveProblem, askedProblem, currentExercise, isExerciseComplete, isActiveSection } = this.state;\r\n        const exerciseData = sectionData.exercises, exerciseHtml = [], exerciseNav = [];\r\n        let exercisesIndex = 0, exerciseInfo;\r\n        if (sectionProgress.video) {\r\n            while (exercisesIndex < exerciseData.length && sectionProgress.exercises[exercisesIndex].status) {\r\n                let toggleIndex = exercisesIndex + 2, activeClass = '';\r\n                if (activeExercise === toggleIndex - 1)\r\n                    activeClass = ' active';\r\n                exerciseNav.push(<Col className={\"zoneSectionNavButton\" + activeClass}><ExerciseButton status=\"completed\" onClick={() => this.openExercise(toggleIndex - 1)} name={exerciseData[exercisesIndex].code} /></Col>);\r\n                exercisesIndex++;\r\n            }\r\n            if (exercisesIndex < exerciseData.length) {\r\n                let toggleIndex = exercisesIndex + 2, activeClass = '';\r\n                if (activeExercise === toggleIndex - 1)\r\n                    activeClass = ' active';\r\n                exerciseNav.push(<Col className={\"zoneSectionNavButton\" + activeClass}><ExerciseButton status=\"start\" onClick={() => this.openExercise(toggleIndex - 1)} name={exerciseData[exercisesIndex].code} /></Col>);\r\n                exercisesIndex++;\r\n            }\r\n        }\r\n        while (exercisesIndex < exerciseData.length) {\r\n            let toggleIndex = exercisesIndex + 2, activeClass = '';\r\n            if (activeExercise === toggleIndex - 1)\r\n                activeClass = ' active';\r\n            exerciseNav.push(<Col className={\"zoneSectionNavButton\" + activeClass}><ExerciseButton status=\"locked\" onClick={() => this.openExercise(toggleIndex - 1)} name={exerciseData[exercisesIndex].code} /></Col>);\r\n            exercisesIndex++;\r\n        }\r\n        let tempExercise = []\r\n        for (let i = 0; i < exerciseData.length; i++) {\r\n            tempExercise.push(<Col className=\"zoneSectionNavButton\"><Button>{exerciseData[i].code}</Button></Col>)\r\n        }\r\n        let hintsUI = [], hintNav = [];\r\n        if (sectionData.exercises[activeExercise - 1]?.hints?.length > 0) {\r\n            for (let i = 0; i < sectionData.exercises[activeExercise - 1].hints.length; i++) {\r\n                hintsUI.push(<div>\r\n                    <div className=\"hintHeader\">Hint {i + 1}</div>\r\n                    <div dangerouslySetInnerHTML={{ __html: sectionData.exercises[activeExercise - 1].hints[i] }}></div>\r\n                </div>\r\n                )\r\n            }\r\n            hintNav.push(\r\n                <NavItem>\r\n                    <NavLink\r\n                        className={this.state.helpTabsClasses[0]}\r\n                        onClick={() => this.changeHelpActiveTab(1)}\r\n                    >\r\n                        Hint\r\n                    </NavLink>\r\n                </NavItem>\r\n            )\r\n        }\r\n        let solutionsListUI = [];\r\n        for (let i = 0; i < solutions.length; i++) {\r\n            solutionsListUI.push(\r\n                <AccordionItem>\r\n                    <AccordionHeader targetId={i + 1}>\r\n                        {solutions[i].problem}\r\n                    </AccordionHeader>\r\n                    <AccordionBody accordionId={i + 1}>\r\n                        {solutions[i].solution}\r\n                    </AccordionBody>\r\n                </AccordionItem>\r\n                // <Card>\r\n                //     <CardBody>\r\n                //         <CardTitle tag=\"h5\">\r\n                //             {solutions[i].problem}\r\n                //         </CardTitle>\r\n                //         <CardText>\r\n                //             {solutions[i].solution}\r\n                //         </CardText>\r\n                //     </CardBody>\r\n                // </Card>\r\n            )\r\n        }\r\n        let askProblemUI = [];\r\n        if (!askedProblem) {\r\n            askProblemUI = <div>\r\n                <Input\r\n                    type=\"textarea\"\r\n                    placeholder=\"Enter your problem here\"\r\n                    value={this.state.problemDesc}\r\n                    onChange={(e) => {\r\n                        this.setState({\r\n                            problemDesc: e.target.value\r\n                        });\r\n                    }}\r\n                />\r\n                <Button onClick={this.submitProblem}>Ask your problem</Button>\r\n            </div>\r\n        }\r\n        else {\r\n            askProblemUI = <div>\r\n                Your problem is recorded.\r\n                <br />Facilitators are available between 9pm to 11pm Monday to Saturday.\r\n                <br />Please join facilitator room : {this.state.facilitatorRoom}.\r\n                <br />Hopefully this will resolve your problem.\r\n            </div>\r\n        }\r\n        return (<div className=\"zoneSection\" key={this.props.sectionProgress}>\r\n            <SectionNav activeExercise={activeExercise} totalExercises={exerciseData.length} currentExercise={currentExercise} isExerciseComplete={isExerciseComplete} isActiveSection={isActiveSection} changeExercise={this.changeExercise} nextExercise={this.nextExercise} />\r\n            <ZoneSectionContent completeVideo={this.props.completeVideo} sectionProgress={sectionProgress} sectionData={sectionData} activeExercise={activeExercise} toggleHelpWindow={this.toggleHelpWindow} submitExercise={this.submitExercise} />\r\n            <Modal\r\n                isOpen={this.state.help}\r\n            >\r\n                <ModalHeader\r\n                    toggle={this.toggleHelpWindow}\r\n                >\r\n                    Help Window\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Nav tabs>\r\n                        {hintNav}\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={this.state.helpTabsClasses[1]}\r\n                                onClick={() => this.changeHelpActiveTab(2)}\r\n                            >\r\n                                Ask your problem\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n\r\n\r\n                    <TabContent activeTab={this.state.activeHelpTab}>\r\n                        <TabPane tabId=\"1\">\r\n                            {hintsUI}\r\n                        </TabPane>\r\n                        <TabPane tabId=\"2\">\r\n                            <div id=\"searchResultsPane\">\r\n                                <Accordion\r\n                                    open={helpWindowActiveProblem}\r\n                                    toggle={this.changeHelpWindowActiveProblem}\r\n                                >\r\n                                    {solutionsListUI}\r\n                                </Accordion>\r\n                            </div>\r\n                            <Button id=\"newProblem\" color=\"info\" onClick={this.contactFacilitator}>Contact Facilitator</Button>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={this.state.contactFacilitator}\r\n            >\r\n                <ModalHeader\r\n                    toggle={this.toggleContactFacilitator}\r\n                >\r\n                    Describe your Problem\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {askProblemUI}\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default ZoneSection;","import React, { Component } from \"react\";\r\nimport \"./zone-content.css\"\r\n\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Accordion, AccordionItem, AccordionHeader, AccordionBody, Button, Badge } from \"reactstrap\";\r\nimport ZoneSection from \"./zone-section/zone-section\";\r\n\r\nconst ZoneRoute = (props) => {\r\n    const params = useParams();\r\n    const profile = params.profile, roadmap = params.roadmap, pathName = params.pathName, zoneName = params.zoneName;\r\n    return (<ZoneContent lessonProgress={props.lessonProgress} updateLessonProgress={props.updateLessonProgress} mainApis={props.mainApis} roomManagementApis={props.roomManagementApis} helpApis={props.helpApis} email={props.email} userName={props.userName} profile={profile} roadmap={roadmap} pathName={pathName} zoneName={zoneName} />)\r\n}\r\n\r\nclass ZoneContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            sectionsJson: [],\r\n            activeSectionIndex: 0,\r\n            lessonProgress: this.props.lessonProgress,\r\n            sectionsLocation: {\r\n                zoneName: this.props.zoneName,\r\n                profile: this.props.profile,\r\n                roadmap: this.props.roadmap,\r\n                pathName: this.props.pathName,\r\n            },\r\n            sectionsLocationIndex: {},\r\n            room: \"\"\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.completeVideo = this.completeVideo.bind(this);\r\n        this.submitExercise = this.submitExercise.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let sectionsJson = await this.fetchSectionsJson();\r\n        this.checkAndAddNewUserProgress(sectionsJson.sections);\r\n        this.getRoomNo();\r\n    }\r\n\r\n    checkAndAddNewUserProgress(sectionsJson) {\r\n        let { lessonProgress, sectionsLocation } = this.state;\r\n        if (!lessonProgress.find(currProfile => currProfile.profileCode === sectionsLocation.profile)) {\r\n            let newProfile = {\r\n                \"profileCode\": sectionsLocation.profile,\r\n                \"roadmaps\": []\r\n            }\r\n            lessonProgress.push(newProfile);\r\n        }\r\n        const profileIndex = lessonProgress.findIndex(currProfile => currProfile.profileCode === sectionsLocation.profile);\r\n        if (!lessonProgress[profileIndex].roadmaps.find(currRoadmap => currRoadmap.name === sectionsLocation.roadmap)) {\r\n            let newRoadmap = {\r\n                \"name\": sectionsLocation.roadmap,\r\n                \"status\": false,\r\n                \"paths\": []\r\n            }\r\n            lessonProgress[profileIndex].roadmaps.push(newRoadmap);\r\n        }\r\n        const roadmapIndex = lessonProgress[profileIndex].roadmaps.findIndex(currRoadmap => currRoadmap.name === sectionsLocation.roadmap);\r\n        if (!lessonProgress[profileIndex].roadmaps[roadmapIndex].paths.find(currPath => currPath.code === sectionsLocation.pathName)) {\r\n            let newPath = {\r\n                \"code\": sectionsLocation.pathName,\r\n                \"status\": false,\r\n                \"progress\": []\r\n            }\r\n            lessonProgress[profileIndex].roadmaps[roadmapIndex].paths.push(newPath);\r\n        }\r\n        const pathIndex = lessonProgress[profileIndex].roadmaps[roadmapIndex].paths.findIndex(currPath => currPath.code === sectionsLocation.pathName)\r\n        if (!lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress.find(currZone => currZone.name === sectionsLocation.zoneName)) {\r\n            let newZone = {\r\n                \"name\": sectionsLocation.zoneName,\r\n                \"status\": false,\r\n                \"progress\": []\r\n            }\r\n            lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress.push(newZone);\r\n        }\r\n        const zoneIndex = lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress.findIndex(currZone => currZone.name === sectionsLocation.zoneName);\r\n        let activeSectionIndex = lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress.length;\r\n        if (activeSectionIndex === 0) {\r\n            let newZoneJson = [];\r\n            for (let i = 0; i < sectionsJson.length; i++) {\r\n                newZoneJson.push({\r\n                    \"status\": false,\r\n                    \"video\": false,\r\n                    \"exercises\": []\r\n                })\r\n                for (let j = 0; j < sectionsJson[i].exercises.length; j++) {\r\n                    newZoneJson[i].exercises.push({\r\n                        \"status\": false,\r\n                        \"startTime\": \"\",\r\n                        \"endTime\": \"\",\r\n                        \"response\": []\r\n                    })\r\n\r\n                }\r\n            }\r\n            lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress = newZoneJson;\r\n        }\r\n        else {\r\n            for (let i = 0; i < activeSectionIndex; i++) {\r\n                if (!lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[i].status) {\r\n                    activeSectionIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        activeSectionIndex++;\r\n        let sectionsLocationIndex = {\r\n            profileIndex: profileIndex,\r\n            roadmapIndex: roadmapIndex,\r\n            pathIndex: pathIndex,\r\n            zoneIndex: zoneIndex\r\n        }\r\n        this.setState({\r\n            lessonProgress: lessonProgress,\r\n            activeSectionIndex: activeSectionIndex,\r\n            sectionsJson: sectionsJson,\r\n            isLoaded: true,\r\n            sectionsLocationIndex: sectionsLocationIndex\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.zoneName !== this.props.zoneName) {\r\n            this.checkAndAddNewUserProgress();\r\n            this.fetchSectionsJson();\r\n            this.getRoomNo();\r\n            console.log(\"room updated\")\r\n        }\r\n    }\r\n\r\n    fetchSectionsJson = async () => {\r\n        const fetchResponse = await fetch(`${process.env.PUBLIC_URL}/data/profiles/${this.props.profile}/${this.props.roadmap}/${this.props.pathName}/${this.props.zoneName}.json`);\r\n        const data = await fetchResponse.json();\r\n        return data;\r\n    }\r\n\r\n    getRoomNo() {\r\n        let zone = this.state.lessonProgress.find(zone => zone.zoneName === this.props.zoneName);\r\n        if (zone) {\r\n            if (!zone.status) {\r\n                for (let i = 0; i < zone.zoneProgress.length; i++) {\r\n                    if (!zone.zoneProgress[i].status) {\r\n                        fetch(this.props.roomManagementApis.getRoomNo + \"?email=\" + this.props.email + \"&roadmap=foundation&zone=\" + this.state.zoneName + \"&section=Section\" + (i + 1))\r\n                            .then(res => res.json())\r\n                            .then(\r\n                                (result) => {\r\n                                    this.setState({\r\n                                        room: result.roomsName\r\n                                    });\r\n                                },\r\n                                (error) => {\r\n                                    console.error(error);\r\n                                }\r\n                            )\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            fetch(this.props.roomManagementApis.getRoomNo + \"?email=\" + this.props.email + \"&roadmap=foundation&zone=\" + this.state.zoneName + \"&section=Section1\")\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        this.setState({\r\n                            room: result.roomsName\r\n                        });\r\n                    },\r\n                    (error) => {\r\n                        console.error(error);\r\n                    }\r\n                )\r\n        }\r\n    }\r\n\r\n    toggle(cardToggleNo) {\r\n        if (cardToggleNo === this.state.activeSectionIndex)\r\n            this.setState({\r\n                activeSectionIndex: 0\r\n            })\r\n        else\r\n            this.setState({\r\n                activeSectionIndex: cardToggleNo\r\n            })\r\n    }\r\n\r\n    completeVideo() {\r\n        let { lessonProgress, sectionsLocationIndex, activeSectionIndex } = this.state;\r\n        lessonProgress[sectionsLocationIndex.profileIndex].roadmaps[sectionsLocationIndex.roadmapIndex].paths[sectionsLocationIndex.pathIndex].progress[sectionsLocationIndex.zoneIndex].progress[activeSectionIndex - 1].video = true;\r\n        this.updateLessonProgress(lessonProgress, false);\r\n    }\r\n\r\n    submitExercise(exerciseInput, startTime, exerciseIndex) {\r\n        let { lessonProgress, sectionsLocationIndex, activeSectionIndex, sectionsLocation } = this.state;\r\n        let { profile, roadmap, pathName, zoneName } = sectionsLocation;\r\n        let { profileIndex, roadmapIndex, pathIndex, zoneIndex } = sectionsLocationIndex;\r\n        lessonProgress = this.updateLessonProgressOnExerciseAndUpdateRoomIfRequired(lessonProgress, startTime, exerciseInput, sectionsLocationIndex, activeSectionIndex, exerciseIndex);\r\n        \r\n        let exerciseData = {\r\n            \"profile\": profile,\r\n            \"roadmap\": roadmap,\r\n            \"pathName\": pathName,\r\n            \"zoneName\": zoneName,\r\n            \"sectionIndex\": activeSectionIndex-1,\r\n            \"exerciseIndex\": exerciseIndex-1,\r\n            \"timeTaken\": lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].endTime - startTime,\r\n            \"startTime\": startTime\r\n        }\r\n        this.updateLessonProgress(lessonProgress, exerciseData);\r\n        if (this.state.sectionsJson[activeSectionIndex-1].exercises.length === exerciseIndex) {\r\n            activeSectionIndex++;\r\n        }\r\n        this.setState({\r\n            lessonProgress: lessonProgress,\r\n            activeSectionIndex: activeSectionIndex\r\n        })\r\n        // if (updateRoom)\r\n        //     this.getRoomNo();\r\n    }\r\n\r\n    updateLessonProgressOnExerciseAndUpdateRoomIfRequired(lessonProgress, startTime, exerciseInput, sectionsLocationIndex, activeSectionIndex, exerciseIndex){\r\n        let updateRoom=false;\r\n        let { profileIndex, roadmapIndex, pathIndex, zoneIndex } = sectionsLocationIndex;\r\n        lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].status = true;\r\n        lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].startTime = startTime;\r\n        lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].endTime = Math.round(new Date().getTime() / 1000);\r\n        lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises[exerciseIndex-1].response.push(exerciseInput);\r\n        if (lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].exercises.length === exerciseIndex) {\r\n            lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress[activeSectionIndex - 1].status = true;\r\n            if (lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].progress.length === activeSectionIndex){\r\n                lessonProgress[profileIndex].roadmaps[roadmapIndex].paths[pathIndex].progress[zoneIndex].status = true\r\n            }\r\n            else\r\n                updateRoom = true;\r\n        }\r\n        return lessonProgress;\r\n    }\r\n\r\n    updateLessonProgress(lessonProgress, exerciseUpdate) {\r\n        this.props.updateLessonProgress(lessonProgress);\r\n        var lessonProgressDetails = JSON.stringify({\r\n            \"email\": this.props.email,\r\n            \"lessonProgress\": lessonProgress,\r\n            \"exerciseAnalytics\": exerciseUpdate\r\n        });\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: lessonProgressDetails,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(this.props.mainApis.updateLesson, requestOptions)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n                let result = JSON.parse(response);\r\n                if (result.status !== 200) {\r\n                    alert(\"Couldn't update progress to server\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert(\"Couldn't update progress to server\");\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, lessonProgress, sectionsJson, activeSectionIndex, room, sectionsLocation, sectionsLocationIndex } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            let sectionsHtml = [], sectionPos = 0, zoneProgress, zoneIndex, moveToNextZone = [];\r\n            zoneProgress = lessonProgress[sectionsLocationIndex.profileIndex].roadmaps[sectionsLocationIndex.roadmapIndex].paths[sectionsLocationIndex.pathIndex].progress[sectionsLocationIndex.zoneIndex].progress;\r\n            // zoneProgress = lessonProgress.find(zone => zone.zoneName === zoneName).zoneProgress;\r\n            // zoneIndex = lessonProgress.findIndex(zone => zone.zoneName === zoneName);\r\n            // if (lessonProgress.find(zone => zone.zoneName === zoneName).status && zonesJson.length !== (zoneIndex + 1)) {\r\n            //     moveToNextZone.push(\r\n            //         <Card\r\n            //             body\r\n            //             className=\"text-center\"\r\n            //         >\r\n            //             <CardTitle tag=\"h5\">\r\n            //                 Zone Completed\r\n            //             </CardTitle>\r\n            //             <CardText>\r\n            //                 Congratulations on completing this zone, you can move to next zone by clicking on the button below.\r\n            //             </CardText>\r\n            //             <Link to={`/zone/${zonesJson[zoneIndex + 1].name}`}>\r\n            //                 <Button color=\"primary\">Go to Next Zone</Button>\r\n            //             </Link>\r\n            //         </Card>\r\n            //     )\r\n            // }\r\n            while (sectionPos < sectionsJson.length && zoneProgress[sectionPos].status === true) {\r\n                let toggleValue = sectionPos + 1;\r\n                sectionsHtml.push(\r\n                    <AccordionItem>\r\n                        <AccordionHeader targetId={toggleValue}>\r\n                            {sectionsJson[sectionPos].desc}\r\n                        </AccordionHeader>\r\n                        <AccordionBody accordionId={toggleValue}>\r\n                            <ZoneSection completeVideo={this.completeVideo} submitExercise={this.submitExercise} sectionProgress={zoneProgress[sectionPos]} sectionData={sectionsJson[sectionPos]} helpApis={this.props.helpApis} sectionsLocation={sectionsLocation} sectionIndex={toggleValue-1} email={this.props.email} userName={this.props.userName} />\r\n                        </AccordionBody>\r\n                    </AccordionItem>\r\n                );\r\n                sectionPos++;\r\n            }\r\n            if (sectionPos < sectionsJson.length) {\r\n                let roomInfo = [], toggleValue = sectionPos + 1;\r\n                if (activeSectionIndex === sectionPos + 1)\r\n                    roomInfo.push(\r\n                        <Badge color=\"primary\">{room}</Badge>\r\n                    )\r\n                sectionsHtml.push(\r\n                    <AccordionItem>\r\n                        <AccordionHeader targetId={toggleValue}>\r\n                            {sectionsJson[sectionPos].desc}\r\n                            {roomInfo}\r\n                        </AccordionHeader>\r\n                        <AccordionBody accordionId={toggleValue}>\r\n                            <ZoneSection completeVideo={this.completeVideo} submitExercise={this.submitExercise} sectionProgress={zoneProgress[sectionPos]} sectionData={sectionsJson[sectionPos]} helpApis={this.props.helpApis} sectionsLocation={sectionsLocation} sectionIndex={toggleValue-1} email={this.props.email} userName={this.props.userName} />\r\n                        </AccordionBody>\r\n                    </AccordionItem>\r\n                );\r\n                sectionPos++;\r\n            }\r\n            while (sectionPos < sectionsJson.length) {\r\n                let toggleValue = sectionPos + 1;\r\n                sectionsHtml.push(\r\n                    <AccordionItem>\r\n                        <AccordionHeader targetId={toggleValue}>\r\n                            {sectionsJson[sectionPos].desc}\r\n                        </AccordionHeader>\r\n                    </AccordionItem>\r\n                );\r\n                sectionPos++;\r\n            }\r\n            return (\r\n                <div key={this.props.zoneName} className=\"sections\">\r\n                    <Link to={`/${sectionsLocation.profile}/${sectionsLocation.roadmap}/${sectionsLocation.pathName}`}><Button color=\"primary\">Back to Home</Button></Link>\r\n                    <Accordion open={this.state.activeSectionIndex} toggle={this.toggle}>\r\n                        {sectionsHtml}\r\n                    </Accordion>\r\n                    {/* {moveToNextZone} */}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ZoneRoute;","import React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\n\r\n// const NavigateToStartPage = ({ nav }) => {\r\n//     const navigate = useNavigate();\r\n\r\n//     if (nav)\r\n//         navigate('/start-page');\r\n\r\n//     return (\r\n//         <></>\r\n//     );\r\n// }\r\n\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emails: []\r\n        }\r\n        this.signUpAccount = this.signUpAccount.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(this.props.signUpApis.getEmails)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        emails: result\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    signUpAccount(event) {\r\n        event.preventDefault();\r\n        let isEmpty = this.checkEmptyValues();\r\n        if (isEmpty)\r\n            return;\r\n        if (this.state.emails.find(email => email === this.email.value)) {\r\n            alert(\"Account with this email altready exists\");\r\n            return;\r\n        }\r\n        if (this.password.value !== this.confirmPassword.value) {\r\n            alert(\"Passwords didn't match\");\r\n            return;\r\n        }\r\n        var newUserData = JSON.stringify({\r\n            \"emailId\": this.email.value,\r\n            \"name\": this.userName.value,\r\n            \"password\": this.password.value,\r\n            \"role\": \"Learner\"\r\n        });\r\n        this.sendSignUpToServerAndReportToUser(newUserData);\r\n    }\r\n\r\n    checkEmptyValues() {\r\n        if (this.email.value.trim() === \"\") {\r\n            alert(\"Please Enter your Email ID\");\r\n            return true;\r\n        }\r\n        if (this.userName.value.trim() === \"\") {\r\n            alert(\"Please Enter your User Name\");\r\n            return true;\r\n        }\r\n        if (this.password.value.length < 8) {\r\n            alert(\"Your password must contain atleast 8 characters\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    sendSignUpToServerAndReportToUser(dataToSend) {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: dataToSend,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(this.props.signUpApis.createUser, requestOptions)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n                let result = JSON.parse(response);\r\n                if (result.statusCode === 200) {\r\n                    alert(result.body);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert(\"Account Creation Failed\");\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"signup\">\r\n                <h1>Sign up to start your journey</h1>\r\n                <Form onSubmit={this.signUpAccount}>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"signupEmail\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter your email ID\"\r\n                            type=\"email\"\r\n                            innerRef={(input) => this.email = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"signupUserName\"\r\n                            name=\"UserName\"\r\n                            placeholder=\"Enter your User Name\"\r\n                            type=\"text\"\r\n                            innerRef={(input) => this.userName = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"signupPassword\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            type=\"password\"\r\n                            innerRef={(input) => this.password = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"signupConfirmPassword\"\r\n                            name=\"confirmPassword\"\r\n                            placeholder=\"Re-Enter your password\"\r\n                            type=\"password\"\r\n                            innerRef={(input) => this.confirmPassword = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Create Your Account\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\n\r\nconst NavigateToHome = ({ nav, role }) => {\r\n    const navigate = useNavigate();\r\n\r\n    if (nav) {\r\n        if (role === \"Learner\")\r\n            navigate('/home');\r\n        else if (role === \"Facilitator\")\r\n            navigate('/facilitator');\r\n        else\r\n            alert(\"Some error occured\");\r\n    }\r\n\r\n    return (\r\n        <></>\r\n    );\r\n}\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navigate: false,\r\n            role: \"\"\r\n        }\r\n        this.login = this.login.bind(this);\r\n    }\r\n    login(event) {\r\n        event.preventDefault();\r\n        fetch(`${this.props.loginApis.loginUser}?email=${this.email.value.trim()}&password=${this.password.value}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result.authorized) {\r\n                        this.props.getLessonProgressEmailAndUserName(result.lessonProgress, this.email.value.trim(), result.name);\r\n                        this.setState({\r\n                            navigate: true,\r\n                            role: result.role\r\n                        })\r\n                    }\r\n                    else\r\n                        alert(\"Incorrect email or password\");\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"login\">\r\n                <h1>Login to your account</h1>\r\n                <Form onSubmit={this.login}>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"loginEmail\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter your email ID\"\r\n                            type=\"email\"\r\n                            innerRef={(input) => this.email = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            id=\"loginPassword\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            type=\"password\"\r\n                            innerRef={(input) => this.password = input}\r\n                        />\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Login\r\n                    </Button>\r\n                    <NavigateToHome nav={this.state.navigate} role={this.state.role} />\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Button, Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './start-page.css';\r\nimport SignUp from \"../signup/signup\";\r\nimport Login from \"../login/login\";\r\n\r\nclass StepTile extends Component {\r\n    render() {\r\n        return (\r\n            <Card className='stepTile'>\r\n                <CardImg\r\n                    alt=\"Card image cap\"\r\n                    src={this.props.imgSrc}\r\n                    top\r\n                    width=\"100%\"\r\n                />\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">\r\n                        {this.props.title}\r\n                    </CardTitle>\r\n                    <CardText>\r\n                        {this.props.content}\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>);\r\n    }\r\n}\r\n\r\nclass FeatureTile extends Component {\r\n    render() {\r\n        let img = <img src={this.props.imgSrc} className={this.props.float} />\r\n        let infoClass = this.props.float === \"left\" ? \"right\" : \"left\";\r\n        let content = <div className={infoClass + \" info\"}>\r\n            <h2 className=\"title\">{this.props.title}</h2>\r\n            <div className=\"content\">{this.props.content}</div>\r\n        </div>\r\n        if (this.props.float === \"left\")\r\n            return (\r\n                <div className=\"featureTile\">\r\n                    {img}\r\n                    {content}\r\n                </div>\r\n            )\r\n        else\r\n            return (\r\n                <div className=\"featureTile\">\r\n                    {content}\r\n                    {img}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nclass StartPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            steps: [\r\n                {\r\n                    placement: 'bottom',\r\n                    title: 'Chose Profile',\r\n                    body: 'Understand what someone in a specific profile does. How does this work affect people. If this looks exciting to you, understand what are the essential qualities to do well in this area. If this seems a good match with you, go for it',\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/profile.jpg\",\r\n                    text: 'Step 1'\r\n                },\r\n                {\r\n                    placement: 'bottom',\r\n                    title: 'Select Guide',\r\n                    body: 'Browse through the list of guides, who take people through the journey to develop a specific profile. Each guide takes people through a unique roadmap that they have conceptualised through their experience. Understand what they expect in terms of prerequisite and what is expected from you. Select the guide that seems suitable to you',\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/guide.jpg\",\r\n                    text: 'Step 2'\r\n                },\r\n                {\r\n                    placement: 'bottom',\r\n                    title: 'Walk the Roadmap',\r\n                    body: 'Walk through the roadmap with your guide. You will be supported by your fellow learners and a group of facilitators. As you walk through the journey you can expect to learn not only the subject but other soft skills that your guide has learnt through his/her own experience. And on top of it you will earn the references, that will help you get connected in the industry for a suitable opening',\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/roadmap.jpg\",\r\n                    text: 'Step 3'\r\n                }\r\n\r\n            ],\r\n            features: [\r\n                {\r\n                    title: \"Trust\",\r\n                    content: \"Verified experienced guides taking learners through an effective roadmap. These roadmaps are crafted out of their own rich experience earned from the years of great work.\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/trust.jpg\",\r\n                },\r\n                {\r\n                    title: \"Focus\",\r\n                    content: \"Learners are protected from confusion arising out of new technologies emerging all the time\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/focus.jpg\",\r\n                },\r\n                {\r\n                    title: \"Consistency\",\r\n                    content: \"Along with learning at their own pace, learners are supported by learning groups, these groups interact regularly through conference calls. This helps in progressing faster, staying motivated, and embracing interpersonal skills that are critical to be effective in the complex domain of software development.\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/persistence.jpg\",\r\n                },\r\n                {\r\n                    title: \"Speed\",\r\n                    content: \"AI powered support framework, that helps the learners move ahead when they get stuck, along with access to facilitators through conference calls\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/speed.jpg\",\r\n                },\r\n                {\r\n                    title: \"Growth\",\r\n                    content: \"Possibility to work as a facilitator, that helps in improving the conceptual understanding, along with the growth in different soft skills like listening, communication and problem solving\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/growth.jpg\",\r\n                },\r\n                {\r\n                    title: \"Opportunity\",\r\n                    content: \"Opportunity to build interesting solutions as a development partner, while being facilitated by industry experts. This helps in improving problem solving capabilities, strengthening personal brand, and it may also lead to employment opportunities, or may be starting their own business.\",\r\n                    imgSrc: process.env.PUBLIC_URL + \"/images/start-page/opportunity.jpg\",\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    render() {\r\n\r\n        return (<div className=\"mainpage\" id='start_page'>\r\n            <h1>Everyone can become a software developer</h1>\r\n            <p>Irrespective of age, prior education, existing profession, marital status etc.</p>\r\n            <div id=\"steps\">\r\n                {this.state.steps.map((step, i) => {\r\n                    return <StepTile key={i} title={step.title} id={i} content={step.body} imgSrc={step?.imgSrc} />;\r\n                })}\r\n            </div>\r\n            <div id=\"signupLogin\">\r\n                <SignUp signUpApis={this.props.signUpApis} />\r\n                <Login loginApis={this.props.loginApis} getLessonProgressEmailAndUserName={this.props.getLessonProgressEmailAndUserName} />\r\n            </div>\r\n            <div>\r\n                {this.state.features.map((feature, i) => {\r\n                    return <FeatureTile key={i} title={feature.title} content={feature.content} imgSrc={feature.imgSrc} float={i % 2 === 0 ? \"left\" : \"right\"} />\r\n                })}\r\n            </div>\r\n            <div className=\"footer\">\r\n                <section class=\"call-to-action text-white text-center\" id=\"contactus\">\r\n                    <div class=\"contact-info container position-relative\" id=\"contactinfo\">\r\n                        <div class=\"section-overlay-layer\">\r\n                            <div class=\"container\">\r\n                                <div class=\"row contact-links\">\r\n\r\n                                    <div class=\"col-sm-4 contact-link-box col-xs-12\">\r\n                                        <div class=\"icon-container\"><span class=\"icon-basic-mail colored-text\"></span></div>\r\n                                        <a href=\"mailto:sakhilearn@gmail.com\" class=\"strong\">sakhilearn@gmail.com</a>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-4 contact-link-box col-xs-12\">\r\n                                        <div class=\"icon-container\"><span class=\"icon-basic-geolocalize-01 colored-text\"></span></div>\r\n                                        <a href=\"https://www.google.com/maps/place/SG+Beta+Tower/@28.667001,77.3814773,17z/data=!3m1!4b1!4m5!3m4!1s0x390cf0740ec8d2cf:0x5ef5cff2a183e57!8m2!3d28.6670086!4d77.3836584\" class=\"strong\">\r\n                                            21, SG Beta Tower, Secor 3, Vasundhara, Ghaziabad, UP, India 201012 </a>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-4 contact-link-box col-xs-12\">\r\n                                        <div class=\"icon-container\"><span class=\"icon-social-twitter colored-text\"></span></div>\r\n                                        <a href=\"https://twitter.com/sakhilearn\" class=\"strong\">@sakhilearn</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default StartPage;","import { Component } from \"react\";\r\nimport \"./home.css\";\r\nimport { Button, Card, CardBody, CardSubtitle, CardText, CardTitle } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsArrowRight } from \"react-icons/bs\"\r\n\r\nclass Profile extends Component {\r\n    inConstruction() {\r\n        alert(\"Method in construction\");\r\n    }\r\n    render() {\r\n        const { profile, profileProgress } = this.props;\r\n        let segmentsGroup = [], profileIndex = 0;\r\n        if (profileProgress) {\r\n            while (profileIndex < profileProgress.length && profileProgress[profileIndex].status) {\r\n                const rightArrow = [];\r\n\r\n                if (profileIndex !== profile.roadmaps[0].path.length - 1)\r\n                    rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n                if (profile.roadmaps[0].path[profileIndex].code && profile.roadmaps[0].path[profileIndex].file)\r\n                    segmentsGroup.push(<div>\r\n                        <Link to={`/${profile.code}/${profile.roadmaps[0].name}/${profile.roadmaps[0].path[profileIndex].code}`}><Button color=\"success\">{profile.roadmaps[0].path[profileIndex].name}</Button></Link>\r\n                        {rightArrow}\r\n                    </div>);\r\n                else\r\n                    segmentsGroup.push(<div>\r\n                        <Button color=\"success\" onClick={this.inConstruction}>{profile.roadmaps[0].path[profileIndex].name}</Button>\r\n                        {rightArrow}\r\n                    </div>);\r\n                profileIndex++;\r\n            }\r\n            if (profileIndex < profileProgress.length) {\r\n                const rightArrow = [];\r\n                if (profileIndex !== profile.roadmaps[0].path.length - 1)\r\n                    rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n                if (profile.roadmaps[0].path[profileIndex].code && profile.roadmaps[0].path[profileIndex].file)\r\n                    segmentsGroup.push(<div>\r\n                        <Link to={`/${profile.code}/${profile.roadmaps[0].name}/${profile.roadmaps[0].path[profileIndex].code}`}><Button color=\"warning\">{profile.roadmaps[0].path[profileIndex].name}</Button></Link>\r\n                        {rightArrow}\r\n                    </div>);\r\n                else\r\n                    segmentsGroup.push(<div>\r\n                        <Button color=\"warning\" onClick={this.inConstruction}>{profile.roadmaps[0].path[profileIndex].name}</Button>\r\n                        {rightArrow}\r\n                    </div>);\r\n            }\r\n            else {\r\n                const rightArrow = [];\r\n\r\n                if (profileIndex !== profile.roadmaps[0].path.length - 1)\r\n                    rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n                if (profile.roadmaps[0].path[profileIndex].code && profile.roadmaps[0].path[profileIndex].file)\r\n                    segmentsGroup.push(<div>\r\n                        <Link to={`/${profile.code}/${profile.roadmaps[0].name}/${profile.roadmaps[0].path[profileIndex].code}`}><Button color=\"primary\">{profile.roadmaps[0].path[profileIndex].name}</Button></Link>\r\n                        {rightArrow}\r\n                    </div>);\r\n                else\r\n                    segmentsGroup.push(<div>\r\n                        <Button color=\"primary\" onClick={this.inConstruction}>{profile.roadmaps[0].path[profileIndex].name}</Button>\r\n                        {rightArrow}\r\n                    </div>);\r\n            }\r\n            profileIndex++;\r\n\r\n        }\r\n        else if (profileIndex < profile.roadmaps[0].path.length) {\r\n            const rightArrow = [];\r\n\r\n            if (profileIndex !== profile.roadmaps[0].path.length - 1)\r\n                rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n            if (profile.roadmaps[0].path[profileIndex].code && profile.roadmaps[0].path[profileIndex].file)\r\n                segmentsGroup.push(<div>\r\n                    <Link to={`/${profile.code}/${profile.roadmaps[0].name}/${profile.roadmaps[0].path[profileIndex].code}`}><Button color=\"primary\">{profile.roadmaps[0].path[profileIndex].name}</Button></Link>\r\n                    {rightArrow}\r\n                </div>);\r\n            else\r\n                segmentsGroup.push(<div>\r\n                    <Button color=\"primary\" onClick={this.inConstruction}>{profile.roadmaps[0].path[profileIndex].name}</Button>\r\n                    {rightArrow}\r\n                </div>);\r\n            profileIndex++;\r\n        }\r\n        for (let i = profileIndex; i < profile.roadmaps[0].path.length; i++) {\r\n            const rightArrow = [];\r\n\r\n            if (i !== profile.roadmaps[0].path.length - 1)\r\n                rightArrow.push(<BsArrowRight className=\"rightArrow\" />);\r\n\r\n            segmentsGroup.push(<div>\r\n                <Button color=\"danger\" disabled>{profile.roadmaps[0].path[i].name}</Button>\r\n                {rightArrow}\r\n            </div>);\r\n        }\r\n        return (<div className=\"roadmap\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">\r\n                        {profile.name}\r\n                    </CardTitle>\r\n                    <CardSubtitle\r\n                        className=\"mb-2 text-muted\"\r\n                        tag=\"h6\"\r\n                    >\r\n                        {profile.desc}\r\n                    </CardSubtitle>\r\n                    <CardText>\r\n                        Here is the roadmap:-\r\n                    </CardText>\r\n                    <div className=\"segments\">\r\n                        {segmentsGroup}\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            profiles: [],\r\n            isLoaded: false,\r\n            error: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(process.env.PUBLIC_URL + \"/data/profiles.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        profiles: result,\r\n                        isLoaded: true\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    render() {\r\n        const { error, isLoaded, profiles } = this.state;\r\n        const { lessonProgress } = this.props;\r\n        let roadmapsHtml = [];\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            for (let i = 0; i < profiles.length; i++) {\r\n                let profileProgress = lessonProgress.find(lesson => lesson.profileCode === profiles[i].code)?.roadmaps[0].paths;\r\n                roadmapsHtml.push(<Profile profile={profiles[i]} profileProgress={profileProgress} />)\r\n            }\r\n            return (<div key={this.props.lessonProgress}>\r\n                {roadmapsHtml}\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}","import { Switch } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport './facilitator.css';\r\n\r\nconst AntSwitch = styled(Switch)(({ theme }) => ({\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: 'flex',\r\n    '&:active': {\r\n      '& .MuiSwitch-thumb': {\r\n        width: 15,\r\n      },\r\n      '& .MuiSwitch-switchBase.Mui-checked': {\r\n        transform: 'translateX(9px)',\r\n      },\r\n    },\r\n    '& .MuiSwitch-switchBase': {\r\n      padding: 2,\r\n      '&.Mui-checked': {\r\n        transform: 'translateX(12px)',\r\n        color: '#fff',\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\r\n      width: 12,\r\n      height: 12,\r\n      borderRadius: 6,\r\n      transition: theme.transitions.create(['width'], {\r\n        duration: 200,\r\n      }),\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      borderRadius: 16 / 2,\r\n      opacity: 1,\r\n      backgroundColor:\r\n        theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\r\n      boxSizing: 'border-box',\r\n    },\r\n  }));\r\n  \r\n\r\nclass Facilitator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            problemsList: [],\r\n            solutionsList: [],\r\n            solvedProblemsList: [],\r\n            activeProblem: -1,\r\n            exerciseDesc: \"\",\r\n            documentSolutions: false\r\n        }\r\n        this.updateActiveProblem = this.updateActiveProblem.bind(this);\r\n        this.toggleMode = this.toggleMode.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${this.props.facilitatorApis.getProblemList}`)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    problemsList: result.filter(problem => problem.status === \"Unresolved\"),\r\n                    solutionsList: result.filter(problem => problem.status === \"Resolved\") \r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    updateActiveProblem(problemIndex) {\r\n        const { problemsList } = this.state\r\n        fetch(`${process.env.PUBLIC_URL}/data/profiles/${problemsList[problemIndex].exerciseLocation.profileCode}/${problemsList[problemIndex].exerciseLocation.roadmapName}/${problemsList[problemIndex].exerciseLocation.pathCode}/${problemsList[problemIndex].exerciseLocation.zoneName}.json`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        exerciseDesc: result.sections[problemsList[problemIndex].exerciseLocation.sectionIndex].exercises[problemsList[problemIndex].exerciseLocation.exerciseIndex].desc,\r\n                        activeProblem: problemIndex\r\n                    });\r\n                }\r\n            )\r\n        this.setState({\r\n            activeProblem: problemIndex\r\n        })\r\n    }\r\n\r\n    toggleMode(){\r\n        this.setState({\r\n            documentSolutions: !this.state.documentSolutions\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { problemsList, activeProblem, exerciseDesc } = this.state;\r\n        let problemListUI = [];\r\n        for (let i = 0; i < problemsList.length; i++) {\r\n            let index = i;\r\n            if (i === activeProblem)\r\n                problemListUI.push(<ListGroupItem\r\n                    active\r\n                    tag=\"button\"\r\n                    className='listItem'\r\n                    onClick={() => this.updateActiveProblem(index)}\r\n                >\r\n                    {problemsList[i].userName}\r\n                </ListGroupItem>);\r\n            else {\r\n                problemListUI.push(<ListGroupItem\r\n                    tag=\"button\"\r\n                    className='listItem'\r\n                    onClick={() => this.updateActiveProblem(index)}\r\n                >\r\n                    {problemsList[i].userName}\r\n                </ListGroupItem>);\r\n            }\r\n        }\r\n        return (<div id='facilitator'>\r\n            <div id=\"problemsList\">\r\n                <div id=\"toggleMode\">\r\n                    Document Solutions\r\n                    <AntSwitch\r\n                        checked={this.state.documentSolutions}\r\n                        onChange={this.toggleMode}\r\n                        color=\"default\"\r\n                    />\r\n                </div>\r\n                <ListGroup>\r\n                    {problemListUI}\r\n                </ListGroup>\r\n            </div>\r\n            <div id=\"problemAndExerciseDesc\">\r\n                <div id=\"exerciseDesc\" dangerouslySetInnerHTML={{ __html: exerciseDesc }}></div>\r\n                <div id=\"problemDesc\">\r\n                    <h5>{problemsList[activeProblem]?.name}</h5>\r\n                    <div>{problemsList[activeProblem]?.desc}</div>\r\n                </div>\r\n            </div>\r\n            <div id=\"existingSolutionsList\"></div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Facilitator;","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Spinner } from 'reactstrap';\r\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n\r\nimport Header from './components/header/header';\r\nimport MainRoute from './components/main/main';\r\nimport ZoneRoute from './components/zone-content/zone-content'\r\nimport StartPage from './components/start-page/start-page';\r\nimport SignUp from './components/signup/signup';\r\nimport Login from './components/login/login';\r\nimport Home from './components/home/home';\r\nimport Facilitator from './components/facilitator/facilitator';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      baseFile: false,\r\n      lessonProgress: false,\r\n      email: \"\",\r\n      userName: false\r\n    }\r\n    this.getLessonProgressEmailAndUserName = this.getLessonProgressEmailAndUserName.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.updateLessonProgress = this.updateLessonProgress.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch(process.env.PUBLIC_URL + \"/data/index.json\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            baseFile: result\r\n          });\r\n        }\r\n      )\r\n  }\r\n  getLessonProgressEmailAndUserName(lessonProgress, email, userName) {\r\n    this.setState({\r\n      lessonProgress: lessonProgress,\r\n      email: email,\r\n      userName: userName\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.setState({\r\n      userName: false\r\n    })\r\n  }\r\n\r\n  updateLessonProgress(lessonProgress){\r\n    this.setState({\r\n      lessonProgress: lessonProgress\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.baseFile)\r\n      return (\r\n        <div className=\"App\">\r\n          <Router>\r\n            <Header userName={this.state.userName} email={this.state.email} logoutApi={this.state.baseFile.apis.login.logout} logout={this.logout} />\r\n            <Routes>\r\n              <Route exact path=\"/\" element={<Navigate to=\"/start-page\" />} />\r\n              <Route exact path=\"/start-page\" element={<StartPage signUpApis={this.state.baseFile.apis.signUp} loginApis={this.state.baseFile.apis.login} getLessonProgressEmailAndUserName={this.getLessonProgressEmailAndUserName} />} />\r\n              <Route exact path=\"/facilitator\" element={<Facilitator facilitatorApis={this.state.baseFile.apis.facilitator} />} />\r\n              <Route exact path=\"/home\" element={<Home lessonProgress={this.state.lessonProgress} />} />\r\n              <Route exact path=\"/:profile/:roadmap/:pathName\" element={<MainRoute lessonProgress={this.state.lessonProgress} />} />\r\n              <Route exact path=\"/:profile/:roadmap/:pathName/:zoneName\" element={<ZoneRoute lessonProgress={this.state.lessonProgress} mainApis={this.state.baseFile.apis.main} roomManagementApis={this.state.baseFile.apis.roomManagement} email={this.state.email} userName={this.state.userName} updateLessonProgress={this.updateLessonProgress} helpApis={this.state.baseFile.apis.help} />} />\r\n            </Routes>\r\n          </Router>\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"App\">\r\n          <Header />\r\n          <div id=\"loadingApp\">\r\n            <Spinner id='appSpinner'>\r\n              Loading...\r\n            </Spinner>\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}